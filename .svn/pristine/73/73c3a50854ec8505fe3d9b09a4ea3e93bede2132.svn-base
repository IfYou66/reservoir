package com.szsk.archives.archivesManage.controller;

import java.util.List;
import java.io.IOException;
import javax.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.ruoyi.common.log.annotation.Log;
import com.ruoyi.common.log.enums.BusinessType;
import com.ruoyi.common.security.annotation.PreAuthorize;
import com.szsk.archives.archivesManage.domain.ArchivesType;
import com.szsk.archives.archivesManage.service.IArchivesTypeService;
import com.ruoyi.common.core.web.controller.BaseController;
import com.ruoyi.common.core.web.domain.AjaxResult;
import com.ruoyi.common.core.utils.poi.ExcelUtil;

/**
 * 档案分类 Controller
 * 
 * @author cangfeng
 * @date 2021-08-10
 */
@RestController
@RequestMapping("/archivesType")
public class ArchivesTypeController extends BaseController
{
    @Autowired
    private IArchivesTypeService archivesTypeService;

    /**
     * 查询档案分类 列表
     */
    @GetMapping("/list")
    public AjaxResult list(ArchivesType archivesType)
    {
        List<ArchivesType> list = archivesTypeService.selectarchivesTypeList(archivesType);
        return AjaxResult.success(list);
    }

    /**
     * 导出档案分类 列表
     */
    @Log(title = "档案分类 ", businessType = BusinessType.EXPORT)
    @PostMapping("/export")
    public void export(HttpServletResponse response, ArchivesType archivesType) throws IOException
    {
        List<ArchivesType> list = archivesTypeService.selectarchivesTypeList(archivesType);
        ExcelUtil<ArchivesType> util = new ExcelUtil<ArchivesType>(ArchivesType.class);
        util.exportExcel(response, list, "档案分类 数据");
    }

    /**
     * 获取档案分类 详细信息
     */
    @GetMapping(value = "/{archivesTypeId}")
    public AjaxResult getInfo(@PathVariable("archivesTypeId") Long archivesTypeId)
    {
        return AjaxResult.success(archivesTypeService.selectarchivesTypeById(archivesTypeId));
    }

    /**
     * 新增档案分类 
     */
    @Log(title = "档案分类 ", businessType = BusinessType.INSERT)
    @PostMapping
    public AjaxResult add(@RequestBody ArchivesType archivesType)
    {
        return toAjax(archivesTypeService.insertarchivesType(archivesType));
    }

    /**
     * 修改档案分类 
     */
    @Log(title = "档案分类 ", businessType = BusinessType.UPDATE)
    @PutMapping
    public AjaxResult edit(@RequestBody ArchivesType archivesType)
    {
        return toAjax(archivesTypeService.updatearchivesType(archivesType));
    }

    /**
     * 删除档案分类 
     */
    @Log(title = "档案分类 ", businessType = BusinessType.DELETE)
	@DeleteMapping("/{archivesTypeIds}")
    public AjaxResult remove(@PathVariable Long[] archivesTypeIds)
    {
        return toAjax(archivesTypeService.deletearchivesTypeByIds(archivesTypeIds));
    }

    /**
     * 获取档案分类下拉树列表
     */
    @GetMapping("/treeselect")
    public AjaxResult treeselect(ArchivesType archivesType)
    {
        List<ArchivesType> archivesTypeList = archivesTypeService.selectarchivesTypeList(archivesType);
        return AjaxResult.success(archivesTypeService.buildArchivesTypeTreeSelect(archivesTypeList));
    }

}
