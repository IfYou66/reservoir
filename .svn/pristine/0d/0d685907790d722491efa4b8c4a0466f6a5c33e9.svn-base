package com.szsk.reservoir.security.controller;

import java.util.List;
import java.io.IOException;
import javax.servlet.http.HttpServletResponse;

import com.szsk.reservoir.security.domain.MEngineeringInformation;
import com.szsk.reservoir.security.service.IMEngineeringInformationService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.ruoyi.common.log.annotation.Log;
import com.ruoyi.common.log.enums.BusinessType;
import com.ruoyi.common.security.annotation.PreAuthorize;
import com.ruoyi.common.core.web.controller.BaseController;
import com.ruoyi.common.core.web.domain.AjaxResult;
import com.ruoyi.common.core.utils.poi.ExcelUtil;
import com.ruoyi.common.core.web.page.TableDataInfo;

@RestController
@RequestMapping("/information")
public class MEngineeringInformationController extends BaseController {

    @Autowired
    private IMEngineeringInformationService mEngineeringInformationService;

    /**
     * 查询水库大坝工程基本信息 列表
     */
    @PreAuthorize(hasPermi = "system:information:list")
    @GetMapping("/list")
    public TableDataInfo list(MEngineeringInformation mEngineeringInformation)
    {
        startPage();
        List<MEngineeringInformation> list = mEngineeringInformationService.selectMEngineeringInformationList(mEngineeringInformation);
        return getDataTable(list);
    }

    /**
     * 导出水库大坝工程基本信息 列表
     */
    @PreAuthorize(hasPermi = "system:information:export")
    @Log(title = "水库大坝工程基本信息 ", businessType = BusinessType.EXPORT)
    @PostMapping("/export")
    public void export(HttpServletResponse response, MEngineeringInformation mEngineeringInformation) throws IOException
    {
        List<MEngineeringInformation> list = mEngineeringInformationService.selectMEngineeringInformationList(mEngineeringInformation);
        ExcelUtil<MEngineeringInformation> util = new ExcelUtil<MEngineeringInformation>(MEngineeringInformation.class);
        util.exportExcel(response, list, "水库大坝工程基本信息 数据");
    }

    /**
     * 获取水库大坝工程基本信息 详细信息
     */
    @PreAuthorize(hasPermi = "system:information:query")
    @GetMapping(value = "/{fId}")
    public AjaxResult getInfo(@PathVariable("fId") Long fId)
    {
        return AjaxResult.success(mEngineeringInformationService.selectMEngineeringInformationById(fId));
    }

    /**
     * 新增水库大坝工程基本信息
     */
    @PreAuthorize(hasPermi = "system:information:add")
    @Log(title = "水库大坝工程基本信息 ", businessType = BusinessType.INSERT)
    @PostMapping
    public AjaxResult add(@RequestBody MEngineeringInformation mEngineeringInformation)
    {
        return toAjax(mEngineeringInformationService.insertMEngineeringInformation(mEngineeringInformation));
    }

    /**
     * 修改水库大坝工程基本信息
     */
    @PreAuthorize(hasPermi = "system:information:edit")
    @Log(title = "水库大坝工程基本信息 ", businessType = BusinessType.UPDATE)
    @PutMapping
    public AjaxResult edit(@RequestBody MEngineeringInformation mEngineeringInformation)
    {
        return toAjax(mEngineeringInformationService.updateMEngineeringInformation(mEngineeringInformation));
    }

    /**
     * 删除水库大坝工程基本信息
     */
    @PreAuthorize(hasPermi = "system:information:remove")
    @Log(title = "水库大坝工程基本信息 ", businessType = BusinessType.DELETE)
    @DeleteMapping("/{fIds}")
    public AjaxResult remove(@PathVariable Long[] fIds)
    {
        return toAjax(mEngineeringInformationService.deleteMEngineeringInformationByIds(fIds));
    }
}
