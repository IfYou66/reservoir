package com.ruoyi.common.core.utils.coordinates;


public class CoordinatesUtils {
	
	public static double [] xytolatlon(double X, double Y ,double L0) {
        double lat ,lon;
        Y-=500000;
        double []  result  = new double[2];
        double iPI = 0.0174532925199433;//pi/180
        double a = 6378137.0; //长半轴 m
        double b = 6356752.31414; //短半轴 m
        double f = 1/298.257222101;//扁率 a-b/a
        double e = 0.0818191910428; //第一偏心率 Math.sqrt(5)
        double ee = Math.sqrt(a*a-b*b)/b; //第二偏心率
        double bf = 0; //底点纬度
        double a0 = 1+(3*e*e/4) + (45*e*e*e*e/64) + (175*e*e*e*e*e*e/256) + (11025*e*e*e*e*e*e*e*e/16384) + (43659*e*e*e*e*e*e*e*e*e*e/65536);
        double b0 = X/(a*(1-e*e)*a0);
        double c1 = 3*e*e/8 +3*e*e*e*e/16 + 213*e*e*e*e*e*e/2048 + 255*e*e*e*e*e*e*e*e/4096;
        double c2 = 21*e*e*e*e/256 + 21*e*e*e*e*e*e/256 + 533*e*e*e*e*e*e*e*e/8192;
        double c3 = 151*e*e*e*e*e*e*e*e/6144 + 151*e*e*e*e*e*e*e*e/4096;
        double c4 = 1097*e*e*e*e*e*e*e*e/131072;
        bf = b0 + c1*Math.sin(2*b0) + c2*Math.sin(4*b0) +c3*Math.sin(6*b0) + c4*Math.sin(8*b0); // bf =b0+c1*sin2b0 + c2*sin4b0 + c3*sin6b0 +c4*sin8b0 +...
        double tf = Math.tan(bf);
        double n2 = ee*ee*Math.cos(bf)*Math.cos(bf); //第二偏心率平方成bf余弦平方
        double c = a*a/b;
        double v=Math.sqrt(1+ ee*ee*Math.cos(bf)*Math.cos(bf));
        double mf = c/(v*v*v); //子午圈半径
        double nf = c/v;//卯酉圈半径
 
        //纬度计算
        lat=bf-(tf/(2*mf)*Y)*(Y/nf) * (1-1/12*(5+3*tf*tf+n2-9*n2*tf*tf)*(Y*Y/(nf*nf))+1/360*(61+90*tf*tf+45*tf*tf*tf*tf)*(Y*Y*Y*Y/(nf*nf*nf*nf)));
        //经度偏差
        lon=1/(nf*Math.cos(bf))*Y -(1/(6*nf*nf*nf*Math.cos(bf)))*(1+2*tf*tf +n2)*Y*Y*Y + (1/(120*nf*nf*nf*nf*nf*Math.cos(bf)))*(5+28*tf*tf+24*tf*tf*tf*tf)*Y*Y*Y*Y*Y;
        result[0] =retain6(lat/iPI);
        result[1] =retain6(L0+lon/iPI);
       // System.out.println(result[1]+","+result[0]);
        return result;
	}
	private static double retain6(double num) {
        String result = String.format("%.6f", num);
        return Double.valueOf(result);
	}
	/**
	 * 2000坐标转百度坐标
	 * @param coordinates
	 * @return
	 */
	public static String getCoordinates(String coordinates) {
		String [] coordinatesArr = coordinates.split(";");
		String [] coordinateTemp = null;
		double [] point84 = null;
		double [] pointBD = null;
		StringBuffer baiduCoordinates = new StringBuffer();
		for(int i =0;i< coordinatesArr.length;i++) {
			if (coordinatesArr[i].length()<1) {
				continue;
			}
			coordinateTemp = coordinatesArr[i].split(",");
			point84 = CoordinatesUtils.xytolatlon(Double.valueOf(coordinateTemp[1]),Double.valueOf(coordinateTemp[0]), 117);
			pointBD = GPSUtil.gps84_To_bd09(point84[0],point84[1]);
			baiduCoordinates.append(Double.toString(pointBD[1])).append(",").append(Double.toString(pointBD[0])).append(";");
		}
		return baiduCoordinates.substring(0, baiduCoordinates.length()-1).toString();
	}
	
	public static void main(String [] args) {
		
		String coordinates = "3897004.650,519615.084,91.90;3897046.893,519449.224,99.87;3897110.138,519301.621,100.92;3897201.280,519124.093,105.14;3897289.632,518960.690,105.21;3897442.734,518848.730,108.18;3897609.120,518747.879,112.16;3897687.520,518640.077,111.18;3897800.025,518425.111,111.19;3897881.690,518278.543,107.56;3897821.304,518080.631,113.58;3897764.721,517901.721,115.58;3897728.074,517726.947,112.98;3897732.470,517699.183,113.56;3897765.227,517704.957,114.83;3897768.624,517685.809,114.70;3897831.082,517695.978,115.24;3897826.696,517721.918,115.93;3898039.266,517758.056,111.99;3898190.908,517681.281,111.59;3898228.116,517560.491,111.42;3898143.235,517491.406,111.24;3898222.712,517455.554,111.25;3898241.931,517492.029,111.88;3898367.217,517431.788,111.94;3898806.383,517176.459,111.34;3898737.917,517276.070,111.66;3898657.822,517433.331,112.00;3898724.272,517406.377,113.33;3898814.144,517386.158,114.67;3898834.221,517446.366,112.99;3898769.765,517458.355,111.41;3898740.724,517534.956,113.72;3898646.119,517554.897,111.61;3898565.870,517607.633,111.95;3898577.896,517665.884,111.51;3898661.688,517706.071,111.39;3898721.136,517652.927,112.26;3898847.295,517621.394,112.17;3898978.335,517598.916,112.75;3898981.317,517630.124,112.42;3898901.417,517683.309,111.00;3898915.065,517724.868,113.17;3898848.738,517773.439,112.80;3898875.891,517947.079,111.52;3899042.329,517875.972,112.11;3899201.601,517819.158,112.07;3899287.738,517734.401,111.91;3899360.103,517579.517,113.02;3899389.447,517736.962,111.61;3899506.295,517716.996,113.21;3899395.183,517834.227,111.76;3899481.629,517899.612,112.16;3899487.926,517936.385,112.14;3899432.811,518068.431,113.51;3899430.544,518168.598,112.76;3899295.866,518200.535,111.50;3899204.311,518252.300,111.42;3899263.537,518387.408,111.40;3899412.946,518321.873,112.24;3899530.773,518290.646,111.99;3899724.270,518313.042,113.50;3899815.131,518355.587,112.70;3899792.831,518227.000,111.64;3899676.193,518182.335,112.80;3899587.305,518137.825,112.51;3899638.765,518085.712,111.39;3899640.485,518019.715,113.13;3899749.187,518062.644,111.56;3899904.462,518035.354,111.40;3899907.107,517992.419,111.56;3899834.103,517973.529,112.86;3899853.563,517899.730,113.52;3899989.048,517884.247,112.94;3900144.416,517933.519,113.25;3900215.549,518007.222,111.60;3900340.767,517979.455,111.97;3900241.682,517920.000,113.87;3900150.625,517810.407,111.89;3900662.940,517694.710,112.10;3900030.187,517635.907,111.41;3899937.216,515797.442,112.40;3900029.496,517531.005,111.34;3900028.236,517485.548,111.75;3899898.400,517433.258,115.18;3900046.266,517404.116,112.04;3900081.041,517284.960,113.68;3900158.292,517263.953,113.27;3900314.225,517202.198,113.56;3900333.667,517304.390,110.87;3900326.250,517349.672,111.54;3900389.714,517394.418,111.30;3900381.278,517448.156,111.86;3900311.809,517459.148,111.37;3900413.903,517526.659,111.74;3900406.762,517462.285,111.93;3900558.343,517355.381,110.82;3900704.988,517224.759,111.98;3900592.568,517130.139,111.98;3900673.048,517057.863,112.84;3900733.601,516988.755,113.11;3900797.090,516936.200,111.79;3900748.095,516833.784,112.82;3900665.200,516691.833,112.96;3900794.371,516669.841,111.34;3900799.908,516568.856,111.54;3900735.350,516505.854,111.97;3900752.686,516424.557,112.04;3900763.322,516504.398,111.84;3900888.658,516565.209,111.45;3901072.052,516700.740,111.85;3901072.052,516703.063,111.34;3901203.122,516864.917,111.67;3901223.943,516994.532,111.97;3901276.712,517172.210,111.40;3901453.732,517122.612,111.43;3901582.322,516989.202,111.62;3901697.945,516856.994,111.75;3901645.114,516851.455,111.48;3901645.210,516840.930,114.14;3901848.312,516826.427,112.18;3902007.734,513733.008,111.71;3901873.560,516645.511,111.98;3901843.113,516578.348,111.63;3901830.307,516558.724,114.90;3901981.060,516644.447,111.82;3902042.001,516537.238,112.07;3902083.801,516437.822,111.37;3902162.834,516437.712,111.33;3902149.343,516308.771,111.44;3902184.000,516272.838,111.48;3902187.764,516209.517,111.78;3902397.763,517269.604,111.23;3902276.342,517366.099,111.61;3902385.761,517434.713,111.70;3903538.482,518616.727,111.76;3903423.787,518560.179,111.51;3903408.194,518588.112,111.55;3903372.788,518588.592,111.40;3903340.083,518667.367,111.41;3903336.239,518665.093,111.83;3903362.431,518582.863,111.48;3903345.406,518577.453,111.34;3903348.353,518544.789,112.58;3903366.679,518542.421,111.66;3903362.691,518478.684,111.95;3903337.778,518420.018,111.39;3903164.403,518359.715,111.42;3903112.172,518343.279,111.56;3903045.735,518476.740,110.86;3903018.911,518483.220,113.37;3903040.565,518351.142,111.62;3903019.163,518265.701,111.37;3902953.941,518241.610,111.65;3902940.151,518294.107,113.75;3902929.860,518289.815,113.88;3902942.627,518240.340,111.66;3902810.037,518235.277,111.82;3902802.090,518277.897,112.11;3902767.292,518264.053,111.61;3902772.110,518228.486,111.49;3902714.093,518248.461,111.39;3902571.113,518268.252,111.43;3902499.478,518325.108,111.54;3902417.169,518406.667,111.39;3902435.908,518470.450,111.60;3902451.402,518527.085,111.43;3902386.580,518538.669,111.67;3902313.459,518524.168,111.45;3902284.924,518543.712,111.74;3902124.462,518538.779,111.23;3902110.842,518567.897,111.33;3902136.180,518689.195,111.36;3902197.257,518765.993,111.60;3902240.833,518812.622,112.29;3902143.052,518769.018,111.29;3902076.030,518686.955,112.34;3901994.632,518593.327,113.97;3902016.206,518470.655,112.75;3902011.204,518371.793,111.56;3901731.259,518366.341,112.32;3901591.297,518158.284,111.76;3901447.985,518141.873,111.46;3901430.887,518282.894,111.39;3901551.715,518294.627,112.80;3901526.766,518376.573,112.03;3901412.540,518392.713,112.35;3901200.069,518410.803,111.40;3901195.780,518472.525,111.72;3901287.678,518578.522,110.57;3901418.030,518661.046,112.16;3901397.798,518774.891,113.12;3901365.597,518765.313,112.07;3901383.000,518713.245,111.35;3901253.930,518685.381,111.51;3901133.645,518729.115,112.33;3901073.349,518584.909,111.63;3900828.260,518619.112,112.04;3900642.555,518652.779,111.86;3900611.070,518753.609,111.70;3900808.071,518880.149,111.38;3900932.854,518810.183,111.87;3901008.801,518992.997,111.16;3901123.453,519184.817,111.94;3901281.911,519149.190,112.23;3901418.645,519122.975,113.08;3901500.277,519151.257,112.51;3901349.382,519216.280,111.42;3901326.855,519336.088,111.74;3901553.709,519482.231,112.17;3901748.598,519555.838,112.24;3901747.397,519631.383,111.69;3901600.395,519737.862,111.90;3901438.410,519732.438,110.37;3901421.121,519844.849,110.98;3901183.452,519789.447,111.93;3901100.296,519678.750,111.76;3900908.402,519663.516,112.73;3900881.937,519758.868,111.46;3900834.998,519693.374,112.89;3900834.349,519559.763,112.83;3900687.221,519456.760,111.80;3900470.427,519478.990,111.55;3900489.296,519538.070,113.48;3900271.871,519580.844,112.03;3900169.064,519497.531,111.47;3900148.212,519606.829,111.52;3900247.151,519691.960,111.69;3900237.942,519719.358,111.35;3900400.099,519718.962,111.34;3900399.537,519744.521,111.69;3900298.334,519787.530,111.77;3900256.410,519845.856,111.72;3900380.156,519995.773,111.94;3900552.948,520041.955,112.74;3900515.116,520087.054,111.65;3900571.656,520125.071,112.64;3900568.458,520162.515,112.58;3900590.102,520260.041,111.90;3900626.499,520290.607,113.11;3900570.753,520262.862,112.95;3900536.235,520190.094,112.02;3900430.693,520169.276,112.91;3900325.945,520074.924,111.96;3900224.301,520093.039,111.28;3900217.701,520170.306,111.97;3900168.870,520181.206,112.87;3900192.511,520100.583,113.23;3900153.709,520007.619,111.82;3900088.044,520073.172,111.70;3900013.710,520111.277,112.29;3900068.197,519989.599,111.69;3899977.121,519942.380,110.99;3899854.553,520040.407,113.04;3899816.536,520083.946,113.09;3899838.044,520025.023,113.14;3899861.437,519949.420,111.68;3899848.794,519868.356,112.12;3899715.162,519867.473,111.94;3899663.369,519941.885,111.54;3899627.226,519931.906,112.88;3899588.281,519785.257,111.52;3899466.136,519811.930,111.55;3899573.626,520023.375,112.59;3899547.861,520080.296,111.75;3899409.860,520024.089,111.34;3899394.407,520060.628,111.95;3899388.664,520133.496,112.54;3899345.302,520073.274,111.87;3899270.817,520064.909,109.36;3899278.943,520117.763,112.24;3899122.069,520107.161,111.60;3899045.430,520024.219,112.17;3898939.500,519981.123,111.60;3898933.634,520046.961,113.27;3898838.534,520062.404,112.07;3898846.442,520202.123,117.41;3898731.521,520193.516,111.54;3898615.807,520180.532,112.80;3898603.026,520255.833,110.13;3898196.540,520198.635,105.96;3898064.201,520045.737,106.32;3897951.551,519907.844,98.85;3897757.426,519815.770,93.37;3897673.063,519533.744,93.31;3897604.879,519354.029,100.21;3897504.944,519182.789,105.16;3897415.520,519038.523,107.79;3897345.334,519152.043,103.98;3897235.045,519398.088,107.34;3897183.916,519518.540,103.63;3897146.023,519648.321,91.62;";
		
		String [] coordinatesArr = coordinates.split(";");
		String [] coordinateTemp = null;
		StringBuffer baiduCoordinates = new StringBuffer();
		for(int i =0;i< coordinatesArr.length;i++) {
			if (coordinatesArr[i].length()<1) {
				continue;
			}
			coordinateTemp = coordinatesArr[i].split(",");
			baiduCoordinates.append(coordinateTemp[1]).append(",").append(coordinateTemp[0]).append(";");
		}
		System.out.println(baiduCoordinates.toString());
		//System.out.println(CoordinatesUtils.getCoordinates(coordinates));
		
		
		
	}
}