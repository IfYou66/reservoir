<template>
  <div class="app-container">
    <el-form :model="queryParams" ref="queryForm" :inline="true" v-show="showSearch" label-width="88px">
      <el-form-item label="编码" prop="sensorId" label-width="99px">
        <el-input
          v-model="queryParams.sensorId"
          placeholder="请输入传感器编码"
          clearable
          size="small"
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>
      <el-form-item label="发生时间" prop="occurTime">
        <el-date-picker clearable size="small"
                        v-model="queryParams.occurTime"
                        type="date"
                        value-format="yyyy-MM-dd"
                        placeholder="选择发生时间">
        </el-date-picker>
      </el-form-item>
      <el-form-item label="处理时间" prop="handleTime">
        <el-date-picker clearable size="small"
                        v-model="queryParams.handleTime"
                        type="date"
                        value-format="yyyy-MM-dd"
                        placeholder="选择处理时间">
        </el-date-picker>
      </el-form-item>
      <el-form-item label="状态" prop="status">
        <el-select v-model="queryParams.status" placeholder="请选择状态" clearable size="small">
          <el-option label="请选择字典生成" value=""/>
        </el-select>
      </el-form-item>
      <el-form-item label="告警值" prop="value">
        <el-input
          v-model="queryParams.value"
          placeholder="请输入告警实时值"
          clearable
          size="small"
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>
      <el-form-item>
        <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>

    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button
          type="primary"
          plain
          icon="el-icon-plus"
          size="mini"
          @click="handleAdd"
          v-hasPermi="['collection:alarm:add']"
        >新增
        </el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="success"
          plain
          icon="el-icon-edit"
          size="mini"
          :disabled="single"
          @click="handleUpdate"
          v-hasPermi="['collection:alarm:edit']"
        >修改
        </el-button>
      </el-col>

      <el-col :span="1.5">
        <el-button
          type="danger"
          plain
          icon="el-icon-delete"
          size="mini"
          :disabled="multiple"
          @click="handleDelete"
          v-hasPermi="['collection:alarm:remove']"
        >删除
        </el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="warning"
          plain
          icon="el-icon-download"
          size="mini"
          @click="handleExport"
          v-hasPermi="['collection:alarm:export']"
        >导出
        </el-button>
      </el-col>
      <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>
    </el-row>

    <el-table v-loading="loading" :data="alarmList" @selection-change="handleSelectionChange"
              :row-class-name="tableRowClassName">
      <el-table-column type="selection" width="55" align="center"/>
      <el-table-column label="告警ID" align="center" prop="id"/>
      <el-table-column label="传感器编码" align="center" prop="sensorId"/>
      <el-table-column label="发生时间" align="center" prop="occurTime" width="180">
        <template slot-scope="scope">
          <span>{{ parseTime(scope.row.occurTime, '{y}-{m}-{d}') }}</span>
        </template>
      </el-table-column>
      <el-table-column label="处理时间" align="center" prop="handleTime" width="180">
        <template slot-scope="scope">
          <span>{{ parseTime(scope.row.handleTime, '{y}-{m}-{d}') }}</span>
        </template>
      </el-table-column>
      <el-table-column label="状态" align="center" prop="status"/>
      <el-table-column label="告警值" align="center" prop="value"/>
      <el-table-column label="处理人" align="center" prop="handler"/>
      <el-table-column label="处理方法" align="center" prop="handleWay"/>
      <el-table-column label="发生原因" align="center" prop="occurReason"/>
      <el-table-column label="备注" align="center" prop="remark"/>
      <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
        <template slot-scope="scope">
          <el-button
            size="mini"
            type="text"
            icon="el-icon-edit"
            @click="handleUpdate(scope.row)"
            v-hasPermi="['collection:alarm:edit']"
          >修改
          </el-button>
          <el-button
            size="mini"
            type="text"
            icon="el-icon-user-solid"
            @click="handleUpdate(scope.row)"
            v-hasPermi="['collection:alarm:edit']"
          >处理
          </el-button>
          <el-button
            size="mini"
            type="text"
            icon="el-icon-eleme"
            @click="handleUpdate(scope.row)"
            v-hasPermi="['collection:alarm:edit']"
          >忽略
          </el-button>
          <el-button
            size="mini"
            type="text"
            icon="el-icon-delete"
            @click="handleDelete(scope.row)"
            v-hasPermi="['collection:alarm:remove']"
          >删除
          </el-button>
        </template>
      </el-table-column>
    </el-table>

    <pagination
      v-show="total>0"
      :total="total"
      :page.sync="queryParams.pageNum"
      :limit.sync="queryParams.pageSize"
      @pagination="getList"
    />

    <!-- 添加或修改告警对话框 -->
    <el-dialog :title="title" :visible.sync="open" width="500px" append-to-body>
      <el-form ref="form" :model="form" :rules="rules" label-width="120px">
        <el-form-item label="传感器编码" prop="sensorId">
          <el-input v-model="form.sensorId" placeholder="请输入传感器编码"/>
        </el-form-item>
        <el-form-item label="发生时间" prop="occurTime">
          <el-date-picker clearable size="small"
                          v-model="form.occurTime"
                          type="date"
                          value-format="yyyy-MM-dd"
                          placeholder="选择发生时间">
          </el-date-picker>
        </el-form-item>
        <el-form-item label="处理时间" prop="handleTime">
          <el-date-picker clearable size="small"
                          v-model="form.handleTime"
                          type="date"
                          value-format="yyyy-MM-dd"
                          placeholder="选择处理时间">
          </el-date-picker>
        </el-form-item>
        <el-form-item label="状态">
          <el-radio-group v-model="form.status">
            <el-radio label="1">请选择字典生成</el-radio>
          </el-radio-group>
        </el-form-item>
        <el-form-item label="告警实时值" prop="value">
          <el-input v-model="form.value" placeholder="请输入告警实时值"/>
        </el-form-item>
        <el-form-item label="处理人" prop="handler">
          <el-input v-model="form.handler" type="textarea"  maxlength="500" show-word-limit  placeholder="请输入内容"/>
        </el-form-item>
        <el-form-item label="处理方法" prop="handleWay">
          <el-input v-model="form.handleWay" type="textarea"  maxlength="500" show-word-limit  placeholder="请输入内容"/>
        </el-form-item>
        <el-form-item label="发生原因" prop="occurReason">
          <el-input v-model="form.occurReason" type="textarea"  maxlength="500" show-word-limit  placeholder="请输入内容"/>
        </el-form-item>
        <el-form-item label="备注" prop="remark">
          <el-input v-model="form.remark" type="textarea"  maxlength="500" show-word-limit  placeholder="请输入内容"/>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" @click="submitForm">确 定</el-button>
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
  import {listAlarm, getAlarm, delAlarm, addAlarm, updateAlarm} from "@/api/collection/alarm";

  export default {
    name: "Alarm",
    data() {
      return {
        // 遮罩层
        loading: true,
        // 选中数组
        ids: [],
        // 非单个禁用
        single: true,
        // 非多个禁用
        multiple: true,
        // 显示搜索条件
        showSearch: true,
        // 总条数
        total: 0,
        // 告警表格数据
        alarmList: [],
        // 弹出层标题
        title: "",
        // 是否显示弹出层
        open: false,
        // 查询参数
        queryParams: {
          pageNum: 1,
          pageSize: 10,
          sensorId: null,
          occurTime: null,
          handleTime: null,
          status: null,
          value: null,
          handler: null,
          handleWay: null,
          occurReason: null,
        },
        // 表单参数
        form: {},
        // 表单校验
        rules: {}
      };
    },
    created() {
      this.getList();
    },
    methods: {
      tableRowClassName({row, rowIndex}) {
        if (rowIndex === 1) {
          return 'warning-row';
        } else if (rowIndex === 3) {
          return 'error-row';
        }
        return 'success-row';
      },
      /** 查询告警列表 */
      getList() {
        this.loading = true;
        listAlarm(this.queryParams).then(response => {
          this.alarmList = response.rows;
          this.total = response.total;
          this.loading = false;
        });
      },
      // 取消按钮
      cancel() {
        this.open = false;
        this.reset();
      },
      // 表单重置
      reset() {
        this.form = {
          id: null,
          sensorId: null,
          occurTime: null,
          handleTime: null,
          status: "0",
          value: null,
          handler: null,
          handleWay: null,
          occurReason: null,
          createBy: null,
          createTime: null,
          updateBy: null,
          updateTime: null,
          remark: null
        };
        this.resetForm("form");
      },
      /** 搜索按钮操作 */
      handleQuery() {
        this.queryParams.pageNum = 1;
        this.getList();
      },
      /** 重置按钮操作 */
      resetQuery() {
        this.resetForm("queryForm");
        this.handleQuery();
      },
      // 多选框选中数据
      handleSelectionChange(selection) {
        this.ids = selection.map(item => item.id)
        this.single = selection.length !== 1
        this.multiple = !selection.length
      },
      /** 新增按钮操作 */
      handleAdd() {
        this.reset();
        this.open = true;
        this.title = "添加告警";
      },
      /** 修改按钮操作 */
      handleUpdate(row) {
        this.reset();
        const id = row.id || this.ids
        getAlarm(id).then(response => {
          this.form = response.data;
          this.open = true;
          this.title = "修改告警";
        });
      },
      /** 提交按钮 */
      submitForm() {
        this.$refs["form"].validate(valid => {
          if (valid) {
            if (this.form.id != null) {
              updateAlarm(this.form).then(response => {
                this.msgSuccess("修改成功");
                this.open = false;
                this.getList();
              });
            } else {
              addAlarm(this.form).then(response => {
                this.msgSuccess("新增成功");
                this.open = false;
                this.getList();
              });
            }
          }
        });
      },
      /** 删除按钮操作 */
      handleDelete(row) {
        const ids = row.id || this.ids;
        this.$confirm('是否确认删除告警编号为"' + ids + '"的数据项?', "警告", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(function () {
          return delAlarm(ids);
        }).then(() => {
          this.getList();
          this.msgSuccess("删除成功");
        }).catch(() => {
        });
      },
      /** 导出按钮操作 */
      handleExport() {
        this.download('collection/alarm/export', {
          ...this.queryParams
        }, `collection_alarm.xlsx`)
      }
    }
  };
</script>

<style>
  .el-table .warning-row {
    background: #ffbb5a;
  }

  .el-table .success-row {
    background: #c7f9bc;
  }

  .el-table .error-row {
    background: rgba(249, 40, 40, 0.5);
  }
</style>
