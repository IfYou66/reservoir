<template>
  <div class="app-container">
<!--    <el-form :model="queryParams" ref="queryForm" :inline="true" v-show="showSearch" label-width="68px">-->
<!--      <el-form-item label="分类别名" prop="typeName">-->
<!--        <el-input-->
<!--          v-model="queryParams.typeName"-->
<!--          placeholder="请输入分类别名"-->
<!--          clearable-->
<!--          size="small"-->
<!--          @keyup.enter.native="handleQuery"-->
<!--        />-->
<!--      </el-form-item>-->
<!--      <el-form-item label="排序" prop="sort">-->
<!--        <el-input-->
<!--          v-model="queryParams.sort"-->
<!--          placeholder="请输入排序"-->
<!--          clearable-->
<!--          size="small"-->
<!--          @keyup.enter.native="handleQuery"-->
<!--        />-->
<!--      </el-form-item>-->
<!--      <el-form-item label="分类编码" prop="code">-->
<!--        <el-input-->
<!--          v-model="queryParams.code"-->
<!--          placeholder="请输入分类编码"-->
<!--          clearable-->
<!--          size="small"-->
<!--          @keyup.enter.native="handleQuery"-->
<!--        />-->
<!--      </el-form-item>-->
<!--      <el-form-item label="父级ID" prop="parentId">-->
<!--        <el-input-->
<!--          v-model="queryParams.parentId"-->
<!--          placeholder="请输入父级ID"-->
<!--          clearable-->
<!--          size="small"-->
<!--          @keyup.enter.native="handleQuery"-->
<!--        />-->
<!--      </el-form-item>-->
<!--      <el-form-item label="层级" prop="level">-->
<!--        <el-input-->
<!--          v-model="queryParams.level"-->
<!--          placeholder="请输入层级"-->
<!--          clearable-->
<!--          size="small"-->
<!--          @keyup.enter.native="handleQuery"-->
<!--        />-->
<!--      </el-form-item>-->
<!--      <el-form-item label="状态 0:无效1：有效" prop="status">-->
<!--        <el-select v-model="queryParams.status" placeholder="请选择状态 0:无效1：有效" clearable size="small">-->
<!--          <el-option label="请选择字典生成" value="" />-->
<!--        </el-select>-->
<!--      </el-form-item>-->
<!--      <el-form-item>-->
<!--        <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>-->
<!--        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>-->
<!--      </el-form-item>-->
<!--    </el-form>-->

    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button
          type="primary"
          plain
          icon="el-icon-plus"
          size="mini"
          @click="handleAdd"
          v-hasPermi="['classifyManage:archivesType:add']"
        >新增</el-button>
      </el-col>
<!--      <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>-->
    </el-row>

    <el-table
      v-loading="loading"
      :data="archivesTypeList"
      row-key="archivesTypeId"
      :default-expand-all="false"
      border
      :tree-props="{children: 'children', hasChildren: 'hasChildren'}"
    >
      <el-table-column label="分类名称" align="center" prop="typeName" />
      <el-table-column label="分类编号" align="center" prop="code" />
      <!--      <el-table-column label="排序" align="center" prop="sort" />-->
<!--      <el-table-column label="父级ID" align="center" prop="parentId" />-->
<!--      <el-table-column label="层级" align="center" prop="level" />-->
<!--      <el-table-column label="状态 0:无效1：有效" align="center" prop="status" />-->
      <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
        <template slot-scope="scope">
          <el-button
            size="mini"
            type="text"
            icon="el-icon-edit"
            @click="handleUpdate(scope.row)"
            v-hasPermi="['classifyManage:archivesType:edit']"
          >修改</el-button>
          <el-button
            size="mini"
            type="text"
            icon="el-icon-plus"
            @click="handleAdd(scope.row)"
            v-hasPermi="['classifyManage:archivesType:add']"
          >新增</el-button>
          <el-button
            size="mini"
            type="text"
            icon="el-icon-delete"
            @click="handleDelete(scope.row)"
            v-hasPermi="['classifyManage:archivesType:remove']"
          >删除</el-button>
        </template>
      </el-table-column>
    </el-table>

    <!-- 添加或修改档案分类 对话框 -->
    <el-dialog :title="title" :visible.sync="open" width="600px" append-to-body>
      <el-form ref="form" :model="form" :rules="rules" label-width="120px">
        <el-form-item label="分类名称" prop="typeName">
          <el-input v-model="form.typeName" placeholder="请输入分类名称" style="width: 95%"/>
        </el-form-item>

        <el-form-item label="上级分类" prop="parentId">
          <treeselect style="width: 95%;" v-model="form.parentId" :options="archivesTypeOptions" :normalizer="normalizer" placeholder="选择上级分类" />
        </el-form-item>

        <el-form-item label="排序" prop="sort">
          <el-input v-model="form.sort" placeholder="请输入排序" style="width: 95%"/>
        </el-form-item>

        <el-form-item label="分类编号" prop="code">
          <el-input v-model="form.code" placeholder="请输入分类编号" style="width: 95%"/>
        </el-form-item>

        <el-form-item label="层级" prop="level">
          <el-input v-model="form.level" placeholder="请输入层级" style="width: 95%"/>
        </el-form-item>
        <el-form-item label="状态">
          <el-radio-group v-model="form.status">
            <el-radio label="1">有效</el-radio>
            <el-radio label="0">无效</el-radio>
          </el-radio-group>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" @click="submitForm">确 定</el-button>
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { listArchivesType, getArchivesType, delArchivesType, addArchivesType, updateArchivesType, exportArchivesType } from "@/api/classifyManage/archivesType";
import Treeselect from "@riophae/vue-treeselect";
import "@riophae/vue-treeselect/dist/vue-treeselect.css";

export default {
  name: "ArchivesType",
  components: {
    Treeselect
  },
  data() {
    return {
      // 遮罩层
      loading: true,
      // 显示搜索条件
      showSearch: true,
      // 档案分类 表格数据
      archivesTypeList: [],
      // 档案分类 树选项
      archivesTypeOptions: [],
      // 弹出层标题
      title: "",
      // 是否显示弹出层
      open: false,
      // 查询参数
      queryParams: {
        typeName: null,
        sort: null,
        code: null,
        parentId: null,
        level: null,
        status: null
      },
      // 表单参数
      form: {
        status: '1'
      },
      // 表单校验
      rules: {
        typeName: [
          { required: true, message: "分类名称不能未空", trigger: "blur" }
        ],
        status: [
          { required: true, message: "状态 0:无效1：有效不能为空", trigger: "blur" }
        ]
      }
    };
  },
  created() {
    this.getList();
  },
  methods: {
    /** 查询档案分类 列表 */
    getList() {
      this.loading = true;
      listArchivesType(this.queryParams).then(response => {
        this.archivesTypeList = this.handleTree(response.data, "archivesTypeId");
        this.loading = false;
      });
    },
    /** 转换档案分类 数据结构 */
    normalizer(node) {
      if (node.children && !node.children.length) {
        delete node.children;
      }
      return {
        id: node.archivesTypeId,
        label: node.typeName,
        children: node.children
      };
    },
    /** 查询档案分类 下拉树结构 */
    getTreeselect() {
      listArchivesType().then(response => {
        this.archivesTypeOptions = [];
        const data = { archivesTypeId: 0, typeName: '顶级节点', children: [] };
        data.children = this.handleTree(response.data, "archivesTypeId", "parentId");
        this.archivesTypeOptions.push(data);
      });
    },
    // 取消按钮
    cancel() {
      this.open = false;
      this.reset();
    },
    // 表单重置
    reset() {
      this.form = {
        archivesTypeId: null,
        typeName: null,
        sort: null,
        code: null,
        parentId: null,
        level: null,
        status: '1'
      };
      this.resetForm("form");
    },
    /** 搜索按钮操作 */
    handleQuery() {
      this.getList();
    },
    /** 重置按钮操作 */
    resetQuery() {
      this.resetForm("queryForm");
      this.handleQuery();
    },
    /** 新增按钮操作 */
    handleAdd(row) {
      this.reset();
      this.getTreeselect();
      if (row != null && row.archivesTypeId) {
        this.form.parentId = row.archivesTypeId;
      } else {
        this.form.parentId = 0;
      }
      this.open = true;
      this.title = "添加档案分类 ";
    },
    /** 修改按钮操作 */
    handleUpdate(row) {
      this.reset();
      this.getTreeselect();
      if (row != null) {
        this.form.parentId = row.archivesTypeId;
      }
      getArchivesType(row.archivesTypeId).then(response => {
        this.form = response.data;
        this.form.status = this.form.status.toString()
        this.open = true;
        this.title = "修改档案分类 ";
      });
    },
    /** 提交按钮 */
    submitForm() {
      this.$refs["form"].validate(valid => {
        if (valid) {
          if (this.form.archivesTypeId != null) {
            updateArchivesType(this.form).then(response => {
              this.msgSuccess("修改成功");
              this.open = false;
              this.getList();
            });
          } else {
            addArchivesType(this.form).then(response => {
              this.msgSuccess("新增成功");
              this.open = false;
              this.getList();
            });
          }
        }
      });
    },
    /** 删除按钮操作 */
    handleDelete(row) {
      this.$confirm('是否确认删除档案分类 编号为"' + row.archivesTypeId + '"的数据项?', "警告", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      }).then(function() {
        return delArchivesType(row.archivesTypeId);
      }).then(() => {
        this.getList();
        this.msgSuccess("删除成功");
      }).catch(() => {});
    }
  }
};
</script>
