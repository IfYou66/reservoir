#工作进程数，建议设置为CPU的总核数

worker_processes  4;

#全局错误日志定义类型，日志等级从低到高依次为：

#debug | info | notice | warn | error | crit

error_log  logs/error.log  info;

#记录主进程ID的文件

pid        /nginx/nginx.pid;



#一个进程能打开的文件描述符最大值，理论上该值因该是最多能打开的文件数除以进程数。

#但是由于nginx负载并不是完全均衡的，所以这个值最好等于最多能打开的文件数。

#LINUX系统可以执行 sysctl -a | grep fs.file 可以看到linux文件描述符。

worker_rlimit_nofile 65535;



#连接数上限， 单个进程允许的最大连接数

events {

    worker_connections  65535;

}



#设定http服务器，利用它的反向代理功能提供负载均衡支持

http {

    #文件扩展名与文件类型映射表

    include       mime.types;

    #默认文件类型

    default_type  application/octet-stream;

    #日志格式

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '

                                   '$status $body_bytes_sent "$http_referer" '

                                   '"$http_user_agent" "$http_x_forwarded_for"';



    #access log 记录了哪些用户，哪些页面以及用户浏览器、ip和其他的访问信息

    access_log  logs/access.log  main;



    #服务器名字的hash表大小

    server_names_hash_bucket_size 128;



    #客户端请求头缓冲大小。

    #nginx默认会用client_header_buffer_size这个buffer来读取header值，

    #如果header过大，它会使用large_client_header_buffers来读取。

    #如果设置过小HTTP头/Cookie过大 会报400 错误 nginx 400 bad request

    #如果超过buffer，就会报HTTP 414错误(URI Too Long)

    #nginx接受最长的HTTP头部大小必须比其中一个buffer大

    #否则就会报400的HTTP错误(Bad Request)

    client_header_buffer_size 32k;

    large_client_header_buffers 4 32k;

    #客户端请求体的大小

    client_body_buffer_size    8m;

    #隐藏ngnix版本号

    server_tokens off;

    #忽略不合法的请求头

    ignore_invalid_headers   on;

    #指定启用除第一条error_page指令以外其他的error_page。

    recursive_error_pages    on;

    #让 nginx 在处理自己内部重定向时不默认使用  server_name 设置中的第一个域名

    server_name_in_redirect off;

    #开启文件传输，一般应用都应设置为on；若是有下载的应用，则可以设置成off来平衡网络I/O和磁盘的I/O来降低系统负载

    sendfile  on;

    #告诉nginx在一个数据包里发送所有头文件，而不一个接一个的发送。

    tcp_nopush  on;

    #告诉nginx不要缓存数据，而是一段一段的发送--当需要及时发送数据时，就应该给应用设置这个属性，

    #这样发送一小块数据信息时就不能立即得到返回值。

    tcp_nodelay    on;

    #长连接超时时间，单位是秒

    keepalive_timeout  65;

    #gzip模块设置，使用 gzip 压缩可以降低网站带宽消耗，同时提升访问速度。

    gzip  on;             #开启gzip

    gzip_min_length  1k;          #最小压缩大小

    gzip_buffers     4 16k;        #压缩缓冲区

    gzip_http_version 1.0;       #压缩版本

    gzip_comp_level 5;            #压缩等级

    gzip_types   text/plain application/x-javascript text/css application/xml image/jpeg image/gif image/png  image/jpg;           #压缩类型

    #upstream作负载均衡，在此配置需要轮询的服务器地址和端口号，max_fails为允许请求失败的次数，默认为1.



    #weight为轮询权重，根据不同的权重分配可以用来平衡服务器的访问率。



    #指定要域名对应的WEB项目访问地址

    #网站 succld.com
    upstream hostname {
        server 192.168.0.8:21000 max_fails=1 weight=100;
    }

    #主机配置

    server {

        #监听端口

        listen       20080;

        #自己指定要跳转的域名

        server_name  succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;

        #字符集

        charset gb2312;

        #单独的access_log文件

        access_log  logs/succld.com.access.log  main;

        #反向代理配置，

        #将所有请求为http://hostname的请求全部转发到upstream中定义的目标服务器中。

        location / {

            #此处配置的域名必须与upstream的域名一致，才能转发。

            proxy_pass     http://hostname;

            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
        }
        location ^~/img/tupian.jpg {

            #此处配置的域名必须与upstream的域名一致，才能转发。
            #rewrite ^/img/(.*)$   http://58.58.27.77:50000
            set $a "http://192.168.0.8:50000/";

            proxy_pass     "http://192.168.0.8:50000/${remote_addr}";

            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;

        }


        #启用nginx status 监听页面



        location /nginxstatus {

            stub_status on;

            access_log on;

        }

        #错误页面

        error_page   500 502 503 504  /50x.html;

        location = /50x.html {

            root   html;

        }
    }


    #网站 www.succld.com
    upstream hostname1 {
        server 192.168.0.8:21000 max_fails=1 weight=100;
    }

     server {

        #监听端口

        listen       20080;

        #自己指定要访问的域名

        server_name  www.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;

        #字符集

        charset gb2312;

        #单独的access_log文件

        access_log  logs/www.succld.com.access.log  main;

        #反向代理配置，

        #将所有请求为http://hostname1的请求全部转发到upstream中定义的目标服务器中。

        location / {

            #此处配置的域名必须与upstream的域名一致，才能转发。

            proxy_pass     http://hostname1;

            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;

        }



        #启用nginx status 监听页面



        location /nginxstatus {

            stub_status on;

            access_log on;

        }

        #错误页面

        error_page   500 502 503 504  /50x.html;

        location = /50x.html {

            root   html;

        }
    }

    #风光互补 waterlifting.succld.com
    upstream hostname2 {

        server waterlifting.succld.com:8080 max_fails=1 weight=100;

    }

     server {

        #监听端口

        listen       20080;

        #自己指定要访问的域名

        server_name  waterlifting.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;

        #字符集

        charset utf-8;

        #单独的access_log文件

        access_log  logs/waterlifting.succld.com.access.log  main;

        #反向代理配置，

        #将所有请求为http://hostname1的请求全部转发到upstream中定义的目标服务器中。

        location / {

            #此处配置的域名必须与upstream的域名一致，才能转发。

            proxy_pass     http://hostname2;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;

        }



        #启用nginx status 监听页面



        location /nginxstatus {

            stub_status on;

            access_log on;

        }

        #错误页面

        error_page   500 502 503 504  /50x.html;

        location = /50x.html {

            root   html;

        }
    }

    #水库电子档案 resinfo.succld.com
    upstream hostname3 {

        server 192.168.0.8:8188 max_fails=1 weight=100;

    }

     server {

        #监听端口

        listen       20080;

        #自己指定要访问的域名

        server_name  resinfo.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;

        #字符集

        charset utf-8;

        #单独的access_log文件

        access_log  logs/resinfo.succld.com.access.log  main;

        #反向代理配置，

        #将所有请求为http://hostname1的请求全部转发到upstream中定义的目标服务器中。

        location / {

            #此处配置的域名必须与upstream的域名一致，才能转发。

            proxy_pass     http://hostname3;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;

        }


        #启用nginx status 监听页面



        location /nginxstatus {

            stub_status on;

            access_log on;

        }

        #错误页面

        error_page   500 502 503 504  /50x.html;

        location = /50x.html {

            root   html;

        }
    }

    #信息化灌区 irrigation.succld.com
    upstream hostname4 {

        server irrigation.succld.com:8080 max_fails=1 weight=100;

    }

     server {

        #监听端口

        listen       20080;

        #自己指定要访问的域名

        server_name  irrigation.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;

        #字符集

        charset utf-8;

        #单独的access_log文件

        access_log  logs/irrigation.succld.com.access.log  main;

        #反向代理配置，

        #将所有请求为http://hostname1的请求全部转发到upstream中定义的目标服务器中。

        location / {

            #此处配置的域名必须与upstream的域名一致，才能转发。

            proxy_pass     http://hostname4;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;

        }



        #启用nginx status 监听页面



        location /nginxstatus {

            stub_status on;

            access_log on;

        }

        #错误页面

        error_page   500 502 503 504  /50x.html;

        location = /50x.html {

            root   html;

        }
    }

    #水质监测 waterquality.succld.com
    upstream hostname5 {

        server waterquality.succld.com:8080 max_fails=1 weight=100;

    }

     server {

        #监听端口

        listen       20080;

        #自己指定要访问的域名

        server_name  waterquality.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;

        #字符集

        charset utf-8;

        #单独的access_log文件

        access_log  logs/waterquality.succld.com.access.log  main;

        #反向代理配置，

        #将所有请求为http://hostname1的请求全部转发到upstream中定义的目标服务器中。

        location / {

            #此处配置的域名必须与upstream的域名一致，才能转发。

            proxy_pass     http://hostname5;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;

        }



        #启用nginx status 监听页面



        location /nginxstatus {

            stub_status on;

            access_log on;

        }

        #错误页面

        error_page   500 502 503 504  /50x.html;

        location = /50x.html {

            root   html;

        }
    }

    #平台 pingtai.succld.com
    upstream hostname10 {
        server 192.168.0.8:20008 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  pingtai.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/pingtai.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname1的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname10;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #水库 shuiku.succld.com
    upstream hostname11 {
        server 192.168.0.8:20001 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  shuiku.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/shuiku.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname1的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname11;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #灌区 guanqu.succld.com
    upstream hostname12 {
        server 192.168.0.8:8089 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  guanqu.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/guanqu.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname1的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname12;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #河道 hedao.succld.com
    upstream hostname13 {
        server 192.168.0.8:20003 max_fails=0 weight=1;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  hedao.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/hedao.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname1的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname13;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #彩山 caishan.succld.com
    upstream hostname14 {
        server 192.168.0.8:8089 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  caishan.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/caishan.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname1的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass  http://192.168.0.8:8089/05380001/;
            index login.html;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #风光互补 fgd.succld.com
    upstream hostname15 {
        server waterlifting.succld.com:8080 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  fgd.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/fgd.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname1的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass   http://waterlifting.succld.com:8080/;
            proxy_set_header Host waterlifting.succld.com;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #南水北调 nsbd.succld.com
    upstream hostname16 {
        server 192.168.0.8:20003 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  nsbd.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/nsbd.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname16的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname16;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #小型水库及塘坝 minisk.succld.com
    upstream hostname17 {
        server 192.168.0.8:8088 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  minisk.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/minisk.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname17 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname17;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #水肥药 sfy.succld.com
    upstream hostname18 {
        server 192.168.0.8:20005 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  sfy.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/sfy.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname18 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname18;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #农田 nongtian.succld.com
    upstream hostname19 {
        server 192.168.0.8:20006 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  nongtian.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/nongtian.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname19 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname19;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #登录 login.succld.com
    upstream hostname20 {
        server 192.168.0.8:9998 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  login.succld.com;
        #rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/login.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname20 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname20;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    #登录 sfyt.succld.com
    upstream hostname21 {
        server 192.168.0.8:10303 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  sfyt.succld.com;
        #rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/sfyt.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname21 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname21;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #利津泵站 lijin.succld.com
    upstream hostname22 {
        server 192.168.0.9:8002 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  lijin.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/lijin.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname22 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname22;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

#数据获取 3388.succld.com
    upstream hostname23 {
        server 192.168.0.9:10304 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  3388.succld.com;
        #rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/3388.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname22 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname23;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

#数据获取 3399.succld.com
    upstream hostname24 {
        server 58.58.27.77:10301 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  3399.succld.com;
        #rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/3399.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname24 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname24;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }


    #灌溉水利用系数
    upstream hostname25 {
        server 192.168.0.8:20009 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  ggxs.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/ggxs.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname25 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname25;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #视频端口
    upstream hostname26 {
        server 58.58.27.77:8084 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  8084.succld.com;
        #rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/8084.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname26 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname26;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;

        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #视频端口
    upstream hostname27 {
        server 192.168.0.5:20017 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  laoling.succld.com;
        #rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/laoling.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname27 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname27;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;

        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #新系统3.0端口
    upstream hostname28{
        server 192.168.0.5:8087 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  sk3.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/sk3.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname28 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname28;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;

        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #6400全景图端口
    upstream hostname29{
        server 192.168.0.5:6400 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  6400.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/6400.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname29 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname29;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;

        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #6401全景图端口
    upstream hostname30{
        server 47.104.227.190:81 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  6401.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/6401.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname30 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname30;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;

        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #6402全景图端口
    upstream hostname31{
        server 192.168.0.5:6402 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  6402.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/6402.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname31 的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname31;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;

        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

   #85全景图端口
    upstream hostname32{
        server 47.104.227.190:81 max_fails=1 weight=100;
    }
     server {
        #监听端口
        listen       20080;
        #自己指定要访问的域名
        server_name  85.succld.com;
        rewrite ^(.*) https://$server_name$1 permanent;
        #字符集
        charset utf-8;
        #单独的access_log文件
        access_log  logs/85.succld.com.access.log  main;
        #反向代理配置，
        #将所有请求为http://hostname32的请求全部转发到upstream中定义的目标服务器中。
        location / {
            #此处配置的域名必须与upstream的域名一致，才能转发。
            proxy_pass     http://hostname32;
            proxy_set_header   Host    $host;
            proxy_set_header   X-Real-IP   $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;

        }
        #启用nginx status 监听页面
        location /nginxstatus {
            stub_status on;
            access_log on;
        }
        #错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

   server {
       listen       443 ssl;
       server_name succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname;
       }
    }

    server {
       listen       443 ssl;
       server_name  www.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname1;
       }
    }

    server {
       listen       443 ssl;
       server_name  waterlifting.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname2;
       }
    }

    server {
       listen       443 ssl;
       server_name  resinfo.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname3;
       }
    }

    server {
       listen       443 ssl;
       server_name  irrigation.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname4;
       }
    }

    server {
       listen       443 ssl;
       server_name  waterquality.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname5;
       }
    }

    server {
       listen       443 ssl;
       server_name  pingtai.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname10;
       }
    }

   server {
       listen       443 ssl;
       server_name  shuiku.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname11;
       }
    }

   server {
       listen       443 ssl;
       server_name  guanqu.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname12;
       }
    }

   server {
       listen       443 ssl;
       server_name  hedao.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname13;
       }
    }

   server {
       listen       443 ssl;
       server_name  caishan.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname14;
       }
    }

   server {
       listen       443 ssl;
       server_name  fgd.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname15;
       }
    }

   server {
       listen       443 ssl;
       server_name  nsbd.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname16;
       }
    }

   server {
       listen       443 ssl;
       server_name  minisk.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname17;
       }
    }

   server {
       listen       443 ssl;
       server_name  sfy.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname18;
       }
    }

   server {
       listen       443 ssl;
       server_name  nongtian.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname19;
       }
    }

   server {
       listen       443 ssl;
       server_name  login.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname20;
       }
    }

   server {
       listen       443 ssl;
       server_name  sfyt.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname21;
       }
    }

   server {
       listen       443 ssl;
       server_name  lijin.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname22;
       }
    }

   server {
       listen       443 ssl;
       server_name  3388.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname23;
       }
    }


   server {
       listen       443 ssl;
       server_name  3399.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname24;
       }
    }

    server {
       listen       443 ssl;
       server_name  ggxs.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname25;
       }
    }

       server {
       listen       443 ssl;
       server_name  8084.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname26;
       }
    }

    server {
       listen       443 ssl;
       server_name  laoling.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname27;
       }
    }

    server {
       listen       443 ssl;
       server_name  sk3.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname28;
       }
    }

    server {
       listen       443 ssl;
       server_name  6400.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname29;
       }
    }

    server {
       listen       443 ssl;
       server_name  6401.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname30;
       }
    }

    server {
       listen       443 ssl;
       server_name  6402.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname31;
       }
    }

    server {
       listen       443 ssl;
       server_name  85.succld.com;

       ssl_certificate      C://nginx//conf//cert//certificate.crt;
       ssl_certificate_key  C://nginx//conf//cert//private.pem;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass http://hostname32;
       }
    }
}





