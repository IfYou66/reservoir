{"remainingRequest":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\src\\api\\collection\\datetime.js","dependencies":[{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\src\\api\\collection\\datetime.js","mtime":1655732570463},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711181250741},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1711181252330},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\eslint-loader\\index.js","mtime":1711181251177}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/GraduationProject/final/reservioir/reservioir-ui/src/api/collection/datetime.js"],"names":["formatTime","timeStr","partList","replace","split","length","firstPart","firstList","secondPart","secondList","formatDateTime","strTime","date","Date","getFullYear","formalize","getMonth","getDate","getHours","getMinutes","getSeconds","value","dateDiff","sDate1","sDate2","aDate","oDate1","oDate2","parseInt","Math","abs","sameHour","firstDate","secondDate","fd","sd","getHour","d","transDateToIndex","t","now","format","hour","substring","getDateWithDiff","dayDiff","day","setDate","isDuringDate","beginDateStr","endDateStr","curDate","beginDate","endDate","isFloodDate","dateBegin","setMonth","strDateBegin","dateEnd","strDateEnd","getDateWithFormat","getDayStr","end","month","convertHourToTime","hourDiff","setHours","formatToDate","formatToYearMonth","formatToYearMonthDate","formatToDateTime","getDayList","start","dateList","startTime","endTime","getTime","year","toString","push","strDate","temp","formatDate","add0","addHour","time","getFormatTime","setTime","m","getDaysBetween","strStart","strEnd","dateStart"],"mappings":"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","sourcesContent":["/*\n时间模块，提供时间的各种处理函数\n */\n\n/**\n * 将\"2020-06-21T15:25:15\"格式化为\"2020年06月21日15时25分15秒\"\n * @param timeStr 时间字符串\n * @returns string\n */\nexport function formatTime(timeStr) {\n  if (!timeStr) {\n    return '';\n  }\n  let partList = timeStr.replace(\"T\", \" \").split(\" \");\n  if (partList.length !== 2) {\n    return \"\";\n  }\n  let firstPart = partList[0];\n  let firstList = firstPart.split('-');\n  if (firstList.length !== 3) {\n    return \"\";\n  }\n  let secondPart = partList[1];\n  let secondList = secondPart.split(':');\n  if (secondList.length !== 3) {\n    return \"\";\n  }\n  return firstList[0] + '年' + firstList[1] + '月' + firstList[2] + '日  ' + secondList[0] + '时' + secondList[1] + '分' +\n    secondList[2] + '秒';\n}\n\n\n/**\n * 格式化时间，将时间变成\"2020-23-04 12:05:56\"\n * @param strTime 服务器时间\n * @returns 格式化时间字符串\n */\nexport function formatDateTime(strTime) {\n  strTime = strTime.replace(/-/g, '/');\n  strTime = strTime.replace(/T/g, ' ');\n  var date = new Date(strTime);\n  return date.getFullYear() + \"-\" + formalize(date.getMonth() + 1) + \"-\" +\n    formalize(date.getDate()) + \" \" + formalize(date.getHours()) +\n    \":\" + formalize(date.getMinutes()) + \":\" + formalize(date.getSeconds());\n}\n\n/**\n * 将时间规范化，比如3：3：43变为03：03：43\n * @returns 规范化后的值，如03\n * @param value\n */\nexport function formalize(value) {\n  return value < 10 ? '0' + value : value\n}\n\n/**\n * 计算两个日期天数差的函数\n * @param sDate1\n * @param sDate2\n * @returns {number}\n * @constructor\n */\nexport function dateDiff(sDate1, sDate2) { //sDate1和sDate2是yyyy-MM-dd格式\n  let aDate, oDate1, oDate2;\n  oDate1 = new Date(sDate1.replace(/-/g, '/')); //转换为yyyy-MM-dd格式\n  oDate2 = new Date(sDate2.replace(/-/g, '/'));\n  return parseInt(Math.abs(oDate1 - oDate2) / 1000 / 60 / 60 / 24); //把相差的毫秒数转换为天数\n}\n\nexport function sameHour(firstDate, secondDate) {\n  let fd = new Date(firstDate);\n  let sd = new Date(secondDate);\n  return fd.getHours() === sd.getHours();\n}\n\nexport function getHour(date) {\n  let d = new Date(date);\n  return parseInt(d.getHours());\n}\n\n//2020-07-29T20:00+08:00  转为index\nexport function transDateToIndex(t) {\n  let now = new Date().format('yyyy-MM-dd');\n  let date = t.split('T')[0];\n  let hour = t.split('T')[1].substring(0, 2);\n  return this.dateDiff(date, now) * 24 + parseInt(hour);\n}\n\n/**\n * 根据和今天的天数之差获取某天的日期\n * @param dayDiff\n * @returns {*}\n */\nexport function getDateWithDiff(dayDiff) {\n  let day = new Date();\n  day.setDate(day.getDate() - dayDiff);\n  return day.format(\"yyyy-MM-dd\");\n}\n\n/**\n * 判断某时间是否在两个时间范围内\n * @param beginDateStr 起始时间\n * @param endDateStr 结束时间\n * @returns {boolean}\n */\nexport function isDuringDate(beginDateStr, endDateStr) {\n  let curDate = new Date(),\n    beginDate = new Date(beginDateStr),\n    endDate = new Date(endDateStr);\n  return curDate >= beginDate && curDate <= endDate;\n}\n\n/**\n * 判断某时间是否在讯期，汛期6月20日-9月30日\n * @returns {boolean}\n */\nexport function isFloodDate(){\n  let dateBegin = new Date();\n  dateBegin.setMonth(5);\n  dateBegin.setDate(1);\n  let strDateBegin = dateBegin.format('yyyy/MM/dd');\n\n  let dateEnd = new Date();\n  dateEnd.setMonth(8);\n  dateEnd.setDate(30);\n  let strDateEnd = dateEnd.format('yyyy/MM/dd');\n  return this.isDuringDate(strDateBegin, strDateEnd);\n}\n\n/**\n * 根据和今天的天数之差获取某天的日期\n * @param dayDiff\n * @param format\n * @returns {*}\n */\nexport function getDateWithFormat(dayDiff, format) {\n  let day = new Date();\n  day.setDate(day.getDate() - dayDiff);\n  return day.format(format);\n}\n\nexport function getDayStr(dayDiff, end) {\n  let day = new Date();\n  day.setDate(day.getDate() + dayDiff);\n  let month = day.getMonth() + 1;\n  let date = day.getDate();\n  month = month > 9 ? month : \"0\" + month;\n  date = date > 9 ? date : \"0\" + date;\n  return month + \"-\" + date + (end ? \" 23:00\" : \" 0:00\");\n}\n\n/**\n * 时间转换，现在时刻2020-10-22 13:00:00 如果hour为34，结果为2020-10-23 10:00:00\n * @param hour 时间段\n * @returns {Date} 具体日期\n */\nexport function convertHourToTime(hour) {\n  let day = new Date();\n  let hourDiff = day.getHours() - hour;\n  day.setHours(day.getHours() - hourDiff);\n  return day;\n}\n\n/**\n * 格式化日期对象\n * @param date 日期对象\n * @returns {*} 日期字符串\n */\nexport function formatToDate(date) {\n  return date.format('yyyy-MM-dd');\n}\n\n/**\n * 格式化日期对象\n * @param date 日期对象\n * @returns {*} 日期字符串\n */\nexport function formatToYearMonth(date) {\n  return date.format('yyyy年MM月');\n}\n\n/**\n * 格式化日期对象\n * @param date 日期对象\n * @returns {*} 日期字符串\n */\nexport function formatToYearMonthDate(date) {\n  return date.format('yyyy年MM月dd日');\n}\n\n/**\n * 格式化日期对象\n * @param date 日期对象\n * @returns {*} 日期时间字符串\n */\nexport function formatToDateTime(date) {\n  return date.format('yyyy-MM-dd hh:mm:ss');\n}\n\n/**\n * 获取两个日期之间的每一天\n * @param start 开始日期\n * @param end 结束日期\n * @returns {[]} 每日列表\n */\nexport function getDayList(start, end) {\n  let dateList = [];\n  let startTime = this.getDate(start);\n  let endTime = this.getDate(end);\n\n  while ((endTime.getTime() - startTime.getTime()) >= 0) {\n    let year = startTime.getFullYear();\n    let month = startTime.getMonth() + 1 < 10 ? '0' + (startTime.getMonth() + 1) : startTime.getMonth() + 1;\n    let day = startTime.getDate().toString().length === 1 ? \"0\" + startTime.getDate() : startTime.getDate();\n    dateList.push(year + \"-\" + month + \"-\" + day);\n    startTime.setDate(startTime.getDate() + 1);\n  }\n  return dateList;\n}\n\n/**\n * 将日期字符串转化为日期对象（忽略时间）\n * @param strDate 日期字符串\n * @returns {Date} 日期对象\n */\nexport function getDate(strDate) {\n  let temp = strDate.split(\"-\");\n  return new Date(temp[0], temp[1] - 1, temp[2]);\n}\n\n\n/**\n * 格式化日期类型对象，此对象不是日期格式\n * @param date\n * @returns {string}\n */\nexport function formatDate(date) {\n  return date.year + \"-\" + this.add0(date.month) + \"-\" + this.add0(date.date);\n}\n\n/**\n * 将日期添加若干小时，然后得到新日期\n * @param date\n * @param hour\n * @returns {*}\n */\nexport function addHour(date, hour) {\n  let time = date.getTime() + hour * 3600 * 1000;\n  return getFormatTime(time);\n\n  function getFormatTime(time) {\n    date.setTime(time);\n    return date.format(\"yyyy-MM-dd hh:mm:ss\");\n  }\n}\n\n/**\n * 加0格式化日期\n * @param m 日期值\n * @returns {*} 格式化的字符串\n */\nexport function add0(m) {\n  return m < 10 ? '0' + m : m\n}\n\n/**\n * 获取两个日期中间间隔的天数\n * @param strStart 起始日期\n * @param strEnd 结束日期\n * @returns {number} 间隔天数\n */\nexport function getDaysBetween(strStart, strEnd) {\n  let dateStart = new Date(strStart.replace(/-/g, '/'));\n  let dateEnd = new Date(strEnd.replace(/-/g, '/'));\n  return parseInt(Math.abs(dateEnd - dateStart) / 1000 / 60 / 60 / 24);\n}\n\n\n\n"]}]}