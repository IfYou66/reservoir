{"remainingRequest":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\src\\views\\flash.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\src\\views\\flash.vue","mtime":1641618436939},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711181250741},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1711181252330},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711181250741},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1711181252689}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["flash.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class='app-container'>\n    <div id='first'>\n      <canvas id=\"digitalRain\" style=\"height: 100%;width:100%;\">\n      </canvas>\n\n      <div id=\"mainMap\"\n           style=\"position: absolute; z-index: 10; left:10%; top:10%; height:50%;width: 50%;padding:10px;background:#0c0d0f00\">\n      </div>\n\n      <div id=\"imgDiv\"\n           style=\"position: absolute; z-index: 10; left:30%; top:500px; width: 600px;padding:10px;background:#ffffff00\">\n        <img :src=\"require(`@/assets/images/title.jpg`)\" alt=\"\" style=\"width: 120%;height: 120%;\">\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  export default {\n    name: \"first\",\n    methods: {\n      jump() {\n\n        const TIME_COUNT = 20;\n        if (!this.timer) {\n          this.count = TIME_COUNT;\n          this.show = false;\n          this.timer = setInterval(() => {\n            if (this.count > 0 && this.count <= TIME_COUNT) {\n              this.count--;\n            } else {\n              this.show = true;\n              clearInterval(this.timer);\n              this.timer = null;\n              //跳转的页面写在此处\n              this.stopMusic();\n              this.$router.push({path: this.redirect || \"/login\"})\n            }\n          }, 1000)\n        }\n      },\n\n      jumpNow() {\n        this.$router.push({path: this.redirect || \"/login\"});\n        clearInterval(this.timer);\n        this.timer = null;\n      },\n\n      getEcharts() {\n        // 基于准备好的dom，初始化echarts实例\n        const json = require('@/api/flash/tz.json')\n        const reservoirs = require('@/api/flash/reservoirs.json')\n        this.$echarts.registerMap('滕州', json);\n        var chart = this.$echarts.init(document.getElementById('mainMap'));\n\n        var series = [];//地图展现数据\n        //24个省市经度纬度\n        var geoCoordMap = function () {\n          let list = reservoirs.list;\n          let obj = {};\n          for (let i = 0; i < list.length; i++) {\n            obj[list[i].label] = [list[i].lon, list[i].lat, list[i].type];\n          }\n          return obj;\n        }();\n\n        var fromdata = '滕州市';//默认飞线原点\n        //初始化飞线数据\n        var XAData = function () {\n          let list = reservoirs.list;\n          let obj = [];\n          for (let i = 0; i < list.length; i++) {\n            let item = [{name: list[i].label}, {name: '滕州市', value: 95}];\n            obj.push(item);\n          }\n          return obj;\n        }();\n\n        var convertData1 = function (data) {\n          let res = [];\n          for (let i = 0; i < data.length; i++) {\n            let dataItem = data[i];\n            let fromCoord = geoCoordMap[dataItem[0].name];\n            let toCoord = geoCoordMap[dataItem[1].name];\n            if (fromCoord && toCoord) {\n              res.push({\n                fromName: dataItem[0].name, toName: dataItem[1].name, coords: [fromCoord, toCoord]\n              });\n            }\n          }\n          return res;\n        };\n\n        [[fromdata, XAData]].forEach(function (item, i) {\n          series.push(\n            {\n              type: 'effectScatter',\n              coordinateSystem: 'geo',\n              zlevel: 15,\n              symbolSize: 8,\n              rippleEffect: {\n                period: 8, brushType: 'stroke', scale: 4\n              },\n              itemStyle: {\n                color: '#ff9815',\n                opacity: 1\n              },\n              data:\n                function () {\n                  let list = reservoirs.list;\n                  let obj = [];\n                  for (let i = 0; i < list.length; i++) {\n                    if (list[i].type === 1) {\n                      let item = [list[i].lon, list[i].lat, list[i].label];\n                      obj.push(item);\n                    }\n                  }\n                  return obj;\n                }(),\n            },\n            {\n              type: 'effectScatter',\n              coordinateSystem: 'geo',\n              zlevel: 15,\n              symbolSize: 4,\n              rippleEffect: {\n                period: 8, brushType: 'stroke', scale: 4\n              },\n              itemStyle: {\n                color: '#ff524d',\n                opacity: 1\n              },\n              data:\n                function () {\n                  let list = reservoirs.list;\n                  let obj = [];\n                  for (let i = 0; i < list.length; i++) {\n                    if (list[i].type === 2) {\n                      let item = [list[i].lon, list[i].lat, list[i].label];\n                      obj.push(item);\n                    }\n                  }\n                  return obj;\n                }(),\n            },\n            {\n              type: 'effectScatter',\n              coordinateSystem: 'geo',\n              zlevel: 15,\n              symbolSize: 4,\n              rippleEffect: {\n                period: 8, brushType: 'stroke', scale: 4\n              },\n              itemStyle: {\n                color: '#1bff28',\n                opacity: 1\n              },\n              data:\n                function () {\n                  let list = reservoirs.list;\n                  let obj = [];\n                  for (let i = 0; i < list.length; i++) {\n                    if (list[i].type === 3) {\n                      let item = [list[i].lon, list[i].lat, list[i].label];\n                      obj.push(item);\n                    }\n                  }\n                  return obj;\n                }(),\n            },\n            {\n              type: 'effectScatter',\n              coordinateSystem: 'geo',\n              zlevel: 15,\n              symbolSize: 12,\n              rippleEffect: {\n                period: 6, brushType: 'stroke', scale: 8\n              },\n              itemStyle: {\n                color: '#FF5722',\n                opacity: 1\n              },\n              data: item[1].map(function (dataItem) {\n                return {\n                  name: dataItem[1].name,\n                  value: geoCoordMap[dataItem[1].name].concat([dataItem[1].name]),\n                  tooltip: {\n                    formatter: dataItem[1].name\n                  }\n                };\n              }),\n            },\n            {\n              type: 'lines',\n              coordinateSystem: 'geo',\n              zlevel: 15,\n\n              effect: {\n                show: true, period: 5, trailLength: 0, symbol: 'arrow', color: '#01AAED', symbolSize: 8,\n              },\n              lineStyle: {\n                normal: {width: 1.2, opacity: 0.6, curveness: 0.2, color: '#FFB800'}\n              },\n              data: convertData1(item[1])\n            }\n          )\n        });\n\n        let option = {\n\n          color: ['#fc5353', '#f4fc6c', '#e68b55', '#9a68ff', '#ff60c5'],\n\n          tooltip: {\n            backgroundColor: \"rgba(255,255,255,0.8)\", //设置背景图片 rgba格式\n            color: \"black\",\n            borderWidth: \"1\",\n            borderColor: \"gray\",\n            textStyle: {\n              color: \"#059bbd\"\n            },\n            trigger: 'item',\n            formatter: function (params) {\n              if (params.value) {\n                return params.data[2];\n              } else {\n                return params.label;\n              }\n            }\n          },\n          legend: {\n            orient: 'horizontal',\n            left: '27%',\n            top: '5%',\n            data: ['高线'],\n            textStyle: {\n              color: '#ffffff'\n            },\n            icon: 'circle'\n          },\n          geo: {\n            map: '滕州',\n            zlevel: 10,\n            layoutCenter: ['48%', '50%'],\n            roam: true,\n            show: true,\n            layoutSize: \"80%\",\n            zoom: 1.08,\n            label: {\n              normal: {\n                show: true,//地图上的省份名称是否显示\n                textStyle: {\n                  fontSize: 12,\n                  color: '#43D0D6'\n                }\n              },\n              emphasis: {\n                show: true\n              }\n            },\n            itemStyle: {\n              normal: {\n                color: '#062031',\n                borderWidth: 1.1,\n                borderColor: '#43D0D6'\n              },\n              emphasis: {\n                areaColor: '#43D0D6'\n              }\n            }\n          },\n          series: series\n        };\n        chart.setOption(option);\n        chart.on('click', function (params) {\n\n        });\n      },\n\n\n      playMusic() {\n        // 为了防止第二次创建\n        let playState = true\n\n        function testAutoPlay() {\n          // 返回一个promise以告诉调用者检测结果\n          return new Promise(resolve => {\n            if (playState) {\n              let audio;\n              let audios = document.getElementsByTagName('audio');\n              if (audios.length > 0) {\n                audio = audios[0];\n              } else {\n                audio = document.createElement('audio');\n              }\n              audio.src = \"flash.mp3\";\n              //循环播放，如果不需要可注释\n              audio.loop = \"loop\"\n              document.body.appendChild(audio);\n              let autoplay = true;\n              // play返回的是一个promise\n              audio.play().then(() => {\n                // 支持自动播放\n                autoplay = true;\n                console.log(\"正常播放\")\n              }).catch(err => {\n                // 不支持自动播放\n                console.log(\"不支持播放\")\n                autoplay = false;\n              }).finally((e) => {\n                resolve(autoplay);\n              });\n              playState = false\n            } else {\n              resolve(false)\n            }\n\n          });\n        }\n\n        let audioInfo = {\n          autoplay: false,\n          testAutoPlay() {\n            return testAutoPlay()\n          },\n          // 监听页面的点击事件，一旦点过了就能autoplay了\n          setAutoPlayWhenClick() {\n            function setAutoPlay() {\n              // 设置自动播放为true\n              audioInfo.autoplay = true;\n              document.removeEventListener('click', setAutoPlay);\n              document.removeEventListener('touchend', setAutoPlay);\n            }\n\n            document.addEventListener('click', setAutoPlay);\n            document.addEventListener('touchend', setAutoPlay);\n          },\n          init() {\n            // 检测是否能自动播放\n            audioInfo.testAutoPlay().then(autoplay => {\n              if (!audioInfo.autoplay) {\n                audioInfo.autoplay = autoplay;\n              }\n            });\n            // 用户点击交互之后，设置成能自动播放\n            audioInfo.setAutoPlayWhenClick();\n          }\n        };\n        // PC端\n        document.addEventListener('click', () => {\n          audioInfo.init();\n        });\n      },\n\n      stopMusic() {\n        let audios = document.getElementsByTagName('audio');\n        if (audios.length > 0) {\n          audios[0].src = '';\n          audios[0].pause();\n        }\n      }\n    },\n    mounted() {\n      this.getEcharts();\n      this.jump();\n\n      this.playMusic();\n\n      let that = this;\n      document.addEventListener('dblclick', function () {\n        that.$router.push({path: that.redirect || \"/login\"});\n        that.stopMusic();\n      });\n\n      let drCav = document.getElementById(\"digitalRain\");\n\n      /*将画布大小设置为窗口文档显示区大小*/\n      let width = window.innerWidth;\n      let height = window.innerHeight;\n      drCav.width = width;\n      drCav.height = height;\n\n      let fontsize = 16;                          //数字字体大小\n      let columns = Math.ceil(width / fontsize);  //列数（向上取整）\n      let dropLine = [];\n      for (let i = 0; i < columns; i++) {\n        dropLine[i] = 0;\n      }\n\n      /*Run*/\n      if (drCav.getContext) {\n        let ctx = drCav.getContext(\"2d\");\n        let timer = setInterval(function () {\n          ctx.fillStyle = \"rgba(0,0,0,0.07)\";   //设置透明度，逐渐覆盖之前的数字\n          ctx.fillRect(0, 0, width, height);       //填充画布\n\n          ctx.fillStyle = \"#06643b\";\n          ctx.font = fontsize + \"px Simsun\";\n          for (let i = 0; i < columns; i++) {\n            let figure = Math.floor(Math.random() * 10);  //生成0~9的伪随机数\n\n            /*绘制数字(核心部分)*/\n            ctx.fillText(figure, i * fontsize, dropLine[i] * fontsize);\n            if (dropLine[i] * fontsize > height || Math.random() > 0.98) {\n              dropLine[i] = 0;\n            }\n            dropLine[i]++;\n          }\n          width++;\n        }, 60);\n      }\n\n    }\n  }\n</script>\n\n<style scoped>\n  .app-container {\n    margin: 2px 0px;\n\n    padding: 0px;\n    background: #000000\n  }\n\n  @-webkit-keyframes scaleDraw {\n    0% {\n      -webkit-transform: scale(1);\n    }\n    25% {\n      -webkit-transform: scale(1.5);\n    }\n    50% {\n      -webkit-transform: scale(1.8);\n    }\n    75% {\n      -webkit-transform: scale(2.2);\n    }\n  }\n\n  #mainMap, #imgDiv {\n    -webkit-animation-name: scaleDraw;\n    -webkit-animation-timing-function: ease-in-out;\n    -webkit-animation-iteration-count: infinite;\n    -webkit-animation-duration: 40s;\n    -webkit-animation-direction: alternate;\n  }\n\n  body {\n    padding: 0;\n  }\n\n  img {\n    margin: 0;\n  }\n\n  #first {\n    display: block;\n  }\n\n  iframe {\n    display: none;\n  }\n</style>\n"],"sourceRoot":"src/views"}]}