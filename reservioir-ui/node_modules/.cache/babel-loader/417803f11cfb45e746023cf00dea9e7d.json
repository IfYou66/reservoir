{"remainingRequest":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\src\\views\\managementGuarantee\\institution\\administration.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\src\\views\\managementGuarantee\\institution\\administration.vue","mtime":1640419131949},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711181250741},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1711181252330},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711181250741},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1711181252689}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["administration.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-row :gutter=\"20\">\n\n      <el-col :span=\"4\" :xs=\"24\">\n        <div class=\"head-container\">\n          <el-input\n            v-model=\"typeName\"\n            placeholder=\"请输入制度分类名称\"\n            clearable\n            size=\"small\"\n            prefix-icon=\"el-icon-search\"\n            style=\"margin-bottom: 20px\"\n          />\n        </div>\n        <div class=\"head-container\">\n          <el-tree\n            :data=\"typeList\"\n            :props=\"defaultProps\"\n            :expand-on-click-node=\"false\"\n            :filter-node-method=\"filterNode\"\n            ref=\"tree\"\n            :default-expand-all=\"false\"\n            @node-click=\"handleNodeClick\"\n          />\n        </div>\n      </el-col>\n\n      <el-col :span=\"20\" :xs=\"24\">\n        <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\">\n          <el-form-item label=\"名称\" prop=\"fSystemName\">\n            <el-input\n              v-model=\"queryParams.fSystemName\"\n              placeholder=\"请输入制度名称\"\n              clearable\n              size=\"small\"\n              style=\"width: 240px\"\n            />\n          </el-form-item>\n\n          <el-form-item>\n            <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n            <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"reset\">重置</el-button>\n            <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"mini\" @click=\"add\">新增</el-button>\n          </el-form-item>\n        </el-form>\n\n\n        <el-table :data=\"manageSystemList\" border>\n          <el-table-column label=\"序号\" align=\"center\" type=\"index\" width=\"150\"/>\n          <el-table-column label=\"制度名称\" align=\"center\" prop=\"fSystemName\">\n            <template slot-scope=\"scope\">\n            <span\n              @click=\"seeDetails(scope.row)\"\n              class=\"color409\"\n            >{{ scope.row.fSystemName }}</span>\n            </template>\n          </el-table-column>\n          <!-- <el-table-column label=\"分类\" align=\"center\" prop=\"fTypeId\"/> -->\n          <el-table-column label=\"分类\" align=\"center\" prop=\"fTypeId\">\n            <template slot-scope=\"scope\">\n           <span v-for=\"(item,index) in typeList2\" :key=\"index\" v-if=\"item.fId == scope.row.fTypeId\">\n             {{ item.fTypeName }}\n           </span>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"说明\" align=\"center\" prop=\"fRemark\" :show-overflow-tooltip=\"true\"/>\n          <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n            <template slot-scope=\"scope\">\n            <el-button size=\"mini\" type=\"text\" @click=\"edit(scope.row)\">编辑</el-button>\n            <el-button size=\"mini\" type=\"text\" @click=\"handleDelete(scope.row)\">删除</el-button>\n            <el-button size=\"mini\" type=\"text\" @click=\"seeDetails(scope.row)\">详情</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <pagination\n          v-show=\"total>0\"\n          :total=\"total\"\n          :page.sync=\"queryParams.pageNum\"\n          :limit.sync=\"queryParams.pageSize\"\n          @pagination=\"getList\"\n        />\n      </el-col>\n    </el-row>\n\n    <el-dialog\n      :title=\"this.title\"\n      :visible.sync=\"dialogVisible\"\n      width=\"1500px\"\n    >\n      <AddAndModify ref=\"AddAndModifyData\" :judge=\"this.judge\" v-bind:manageSystem=\"manageSystem\"></AddAndModify>\n      <span slot=\"footer\" class=\"dialog-footer\" v-if=\"judge == 0\">\n    <el-button @click=\"dialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n  </span>\n    </el-dialog>\n\n\n  </div>\n</template>\n\n<script>\nimport { treeselect, listType } from \"@/api/indemnification/type.js\";\nimport AddAndModify from '../institution/addAndModify.vue'\n\nimport { listManageSystem, getManageSystem, delManageSystem, addManageSystem, updateManageSystem } from \"@/api/indemnification/manageSystem\";\nimport Treeselect from \"@riophae/vue-treeselect\";\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\n\nexport default {\n\n  components: {Treeselect, AddAndModify},\n  data() {\n    return {\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      // 总条数\n      total: 0,\n      // 制度分类表格数据\n      typeList: [],\n      typeList2: [],\n      typeName: '',\n\n      judge: '',\n\n      title: '',\n\n      dialogVisible: true,\n\n      // 遮罩层\n      loading: true,\r\n      manageSystemList: [],\n      manageSystem: {\n        fSystemName: null,\n        fTypeId: null,\n        fSystemContent: null,\n        fRemark: null,\n        fInstitutionId: null,\n        fStatus: null,\n        fCreateTime: null,\n        fUpdateTime: null\n      },\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        fSystemName: null,\r\n        fTypeId: null,\r\n        fSystemContent: null,\r\n        fRemark: null,\r\n        fInstitutionId: null,\r\n        fStatus: null,\r\n        fCreateTime: null,\r\n        fUpdateTime: null\r\n      },\n    };\n  },\n  watch: {\n    // 根据名称筛选部门树\n    typeName(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n\n  created() {\n      this.getTypeList();\n      this.getList();\n  },\n\n  methods: {\n    getTypeList() {\n        this.loading = true;\n        treeselect(this.queryParams).then(response => {\n            this.typeList = response.data;\n        });\n    },\n\n    seeDetails(row) {\n      this.manageSystem = this.deepClone(row);\n      this.title = '制度管理详情';\n      this.dialogVisible = true;\n      this.judge = 1;\n    },\n\n    add() {\n      this.manageSystem = {};\n      this.title = '新增制度管理';\n      this.dialogVisible = true;\n      this.judge = 0;\n    },\n\n    edit(row) {\n      this.manageSystem = this.deepClone(row);\n      this.title = '编辑制度管理';\n      this.dialogVisible = true;\n      this.judge = 0;\n    },\n\r\n    /** 查询制度管理 列表 */\r\n    getList() {\r\n      this.loading = true;\r\n      listManageSystem(this.queryParams).then(response => {\r\n        this.manageSystemList = response.rows;\r\n        this.total = response.total;\r\n        this.loading = false;\r\n      });\n      listType().then(response => {\n        this.typeList2 = response.rows;\n      });\r\n    },\n    // 筛选节点\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    },\n    // 节点单击事件\n    handleNodeClick(data) {\n      this.queryParams.fTypeId = data.id;\n      this.getList();\n    },\n    // 表单重置\n    reset() {\n      this.queryParams = {\r\n        pageNum: 1,\r\n        pageSize: 10,\n        fTypeId: undefined,\n        fSystemName: undefined\n      };\n      this.getList();\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery() {\r\n      this.queryParams.pageNum = 1;\r\n      this.getList();\r\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.userId);\n      this.single = selection.length != 1;\n      this.multiple = !selection.length;\n    },\r\n    /** 提交按钮 */\r\n    submitForm() {\n      if(this.title == '新增制度管理'){\n          addManageSystem(this.manageSystem).then(response => {\n            this.msgSuccess(\"新增成功\");\n            this.dialogVisible = false;\n            this.getList();\n          });\n      }else if(this.title == '编辑制度管理'){\n        updateManageSystem(this.manageSystem).then(response => {\n          this.msgSuccess(\"修改成功\");\n          this.dialogVisible = false;\n          this.getList();\n        });\n      }\r\n    },\r\n    /** 删除按钮操作 */\r\n    handleDelete(row) {\r\n      const fIds = row.fId || this.ids;\r\n      this.$confirm('是否确认删除名称为\"' + row.fSystemName + '\"的数据项?', \"警告\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(function() {\r\n          return delManageSystem(fIds);\r\n        }).then(() => {\r\n          this.getList();\r\n          this.msgSuccess(\"删除成功\");\r\n        }).catch(() => {});\r\n    },  judgeType(obj) {\n  // tostring会返回对应不同的标签的构造函数\n    const toString = Object.prototype.toString;\n    const map = {\n      '[object Boolean]': 'boolean',\n      '[object Number]': 'number',\n      '[object String]': 'string',\n      '[object Function]': 'function',\n      '[object Array]': 'array',\n      '[object Date]': 'date',\n      '[object RegExp]': 'regExp',\n      '[object Undefined]': 'undefined',\n      '[object Null]': 'null',\n      '[object Object]': 'object',\n    };\n    if (obj instanceof Element) {\n      return 'element';\n    }\n    return map[toString.call(obj)];\n  },\n  deepClone(data) {\n    const type = this.judgeType(data);\n    let obj;\n    if (type === 'array'){\n      obj = [];\n    } else if (type === 'object') {\n      obj = {};\n    } else {\n  // 不再具有下一层次\n      return data;\n    }\n    if (type === 'array'){\n      for (let i = 0, len = data.length; i < len; i++) {\n        obj.push(this.deepClone(data[i]));\n      }\n    } else if (type === 'object') {\n      // 对原型上的方法也拷贝了....\n      for (const key in data) {\n        obj[key] = this.deepClone(data[key]);\n      }\n    }\n    return obj;\n  },\n    /** 导出按钮操作 */\n    handleExport() {\n      this.download('system/user/export', {\n        ...this.queryParams\n      }, `user_${new Date().getTime()}.xlsx`)\n    },\n    /** 导入按钮操作 */\n    handleImport() {\n      this.upload.title = \"用户导入\";\n      this.upload.open = true;\n    },\n    /** 下载模板操作 */\n    importTemplate() {\n      this.download('system/user/importTemplate', {\n        ...this.queryParams\n      }, `user_${new Date().getTime()}.xlsx`)\n    },\n    // 文件上传中处理\n    handleFileUploadProgress(event, file, fileList) {\n      this.upload.isUploading = true;\n    },\n    // 文件上传成功处理\n    handleFileSuccess(response, file, fileList) {\n      this.upload.open = false;\n      this.upload.isUploading = false;\n      this.$refs.upload.clearFiles();\n      this.$alert(response.msg, \"导入结果\", {dangerouslyUseHTMLString: true});\n      this.getList();\n    },\n    // 提交上传文件\n    submitFileForm() {\n      this.$refs.upload.submit();\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views/managementGuarantee/institution"}]}