{"remainingRequest":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\src\\api\\indemnification\\type.js","dependencies":[{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\src\\api\\indemnification\\type.js","mtime":1640096690902},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711181250741},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1711181252330},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\eslint-loader\\index.js","mtime":1711181251177}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJEOi9HcmFkdWF0aW9uUHJvamVjdC9maW5hbC9yZXNlcnZpb2lyL3Jlc2VydmlvaXItdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0IikuZGVmYXVsdDsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5saXN0VHlwZSA9IGxpc3RUeXBlOwpleHBvcnRzLmdldFR5cGUgPSBnZXRUeXBlOwpleHBvcnRzLmFkZFR5cGUgPSBhZGRUeXBlOwpleHBvcnRzLnVwZGF0ZVR5cGUgPSB1cGRhdGVUeXBlOwpleHBvcnRzLmRlbFR5cGUgPSBkZWxUeXBlOwpleHBvcnRzLnRyZWVzZWxlY3QgPSB0cmVlc2VsZWN0OwoKdmFyIF9yZXF1ZXN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAL3V0aWxzL3JlcXVlc3QiKSk7CgovLyDmn6Xor6LliLbluqbliIbnsbvliJfooagKZnVuY3Rpb24gbGlzdFR5cGUocXVlcnkpIHsKICByZXR1cm4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICAgIHVybDogJy9yZXNlcnZvaXIvdHlwZS9saXN0JywKICAgIG1ldGhvZDogJ2dldCcsCiAgICBwYXJhbXM6IHF1ZXJ5CiAgfSk7Cn0gLy8g5p+l6K+i5Yi25bqm5YiG57G76K+m57uGCgoKZnVuY3Rpb24gZ2V0VHlwZShmVHlwZUlkKSB7CiAgcmV0dXJuICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgICB1cmw6ICcvcmVzZXJ2b2lyL3R5cGUvJyArIGZUeXBlSWQsCiAgICBtZXRob2Q6ICdnZXQnCiAgfSk7Cn0gLy8g5paw5aKe5Yi25bqm5YiG57G7CgoKZnVuY3Rpb24gYWRkVHlwZShkYXRhKSB7CiAgcmV0dXJuICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgICB1cmw6ICcvcmVzZXJ2b2lyL3R5cGUnLAogICAgbWV0aG9kOiAncG9zdCcsCiAgICBkYXRhOiBkYXRhCiAgfSk7Cn0gLy8g5L+u5pS55Yi25bqm5YiG57G7CgoKZnVuY3Rpb24gdXBkYXRlVHlwZShkYXRhKSB7CiAgcmV0dXJuICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgICB1cmw6ICcvcmVzZXJ2b2lyL3R5cGUnLAogICAgbWV0aG9kOiAncHV0JywKICAgIGRhdGE6IGRhdGEKICB9KTsKfSAvLyDliKDpmaTliLbluqbliIbnsbsKCgpmdW5jdGlvbiBkZWxUeXBlKGZUeXBlSWQpIHsKICByZXR1cm4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICAgIHVybDogJy9yZXNlcnZvaXIvdHlwZS8nICsgZlR5cGVJZCwKICAgIG1ldGhvZDogJ2RlbGV0ZScKICB9KTsKfSAvLyDliLbluqbliIbnsbvmoJEKCgpmdW5jdGlvbiB0cmVlc2VsZWN0KCkgewogIHJldHVybiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogICAgdXJsOiAnL3Jlc2Vydm9pci90eXBlL3RyZWVzZWxlY3QnLAogICAgbWV0aG9kOiAnZ2V0JwogIH0pOwp9"},{"version":3,"sources":["D:/GraduationProject/final/reservioir/reservioir-ui/src/api/indemnification/type.js"],"names":["listType","query","url","method","params","getType","fTypeId","addType","data","updateType","delType","treeselect"],"mappings":";;;;;;;;;;;;;;AAAA;;AAEA;AACO,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,SAAO,sBAAQ;AACbC,IAAAA,GAAG,EAAE,sBADQ;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbC,IAAAA,MAAM,EAAEH;AAHK,GAAR,CAAP;AAKD,C,CAED;;;AACO,SAASI,OAAT,CAAiBC,OAAjB,EAA0B;AAC/B,SAAO,sBAAQ;AACbJ,IAAAA,GAAG,EAAE,qBAAqBI,OADb;AAEbH,IAAAA,MAAM,EAAE;AAFK,GAAR,CAAP;AAID,C,CAED;;;AACO,SAASI,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B,SAAO,sBAAQ;AACbN,IAAAA,GAAG,EAAE,iBADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbK,IAAAA,IAAI,EAAEA;AAHO,GAAR,CAAP;AAKD,C,CAED;;;AACO,SAASC,UAAT,CAAoBD,IAApB,EAA0B;AAC/B,SAAO,sBAAQ;AACbN,IAAAA,GAAG,EAAE,iBADQ;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbK,IAAAA,IAAI,EAAEA;AAHO,GAAR,CAAP;AAKD,C,CAED;;;AACO,SAASE,OAAT,CAAiBJ,OAAjB,EAA0B;AAC/B,SAAO,sBAAQ;AACbJ,IAAAA,GAAG,EAAE,qBAAqBI,OADb;AAEbH,IAAAA,MAAM,EAAE;AAFK,GAAR,CAAP;AAID,C,CAED;;;AACO,SAASQ,UAAT,GAAsB;AAC3B,SAAO,sBAAQ;AACbT,IAAAA,GAAG,EAAE,4BADQ;AAEbC,IAAAA,MAAM,EAAE;AAFK,GAAR,CAAP;AAID","sourcesContent":["import request from '@/utils/request'\r\n\r\n// 查询制度分类列表\r\nexport function listType(query) {\r\n  return request({\r\n    url: '/reservoir/type/list',\r\n    method: 'get',\r\n    params: query\r\n  })\r\n}\r\n\r\n// 查询制度分类详细\r\nexport function getType(fTypeId) {\r\n  return request({\r\n    url: '/reservoir/type/' + fTypeId,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 新增制度分类\r\nexport function addType(data) {\r\n  return request({\r\n    url: '/reservoir/type',\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\n// 修改制度分类\r\nexport function updateType(data) {\r\n  return request({\r\n    url: '/reservoir/type',\r\n    method: 'put',\r\n    data: data\r\n  })\r\n}\r\n\r\n// 删除制度分类\r\nexport function delType(fTypeId) {\r\n  return request({\r\n    url: '/reservoir/type/' + fTypeId,\r\n    method: 'delete'\r\n  })\r\n}\n\n// 制度分类树\r\nexport function treeselect() {\n  return request({\n    url: '/reservoir/type/treeselect',\n    method: 'get'\n  })\n}\n"]}]}