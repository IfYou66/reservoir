{"remainingRequest":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue","mtime":1711181257436},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711181250741},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1711181252330},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711181250741},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1711181252689}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    class=\"dv-flyline-chart\"\n    ref=\"dv-flyline-chart\"\n    :style=\"`background-image: url(${mergedConfig ? mergedConfig.bgImgUrl : ''})`\"\n    @click=\"consoleClickPos\"\n  >\n    <svg v-if=\"mergedConfig\" :width=\"width\" :height=\"height\">\n      <defs>\n        <radialGradient\n          :id=\"gradientId\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n        </radialGradient>\n\n        <radialGradient\n          :id=\"gradient2Id\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n        </radialGradient>\n\n        <circle\n          v-if=\"paths[0]\"\n          :id=\"`circle${paths[0].toString()}`\"\n          :cx=\"paths[0][2][0]\"\n          :cy=\"paths[0][2][1]\"\n        >\n          <animate\n            attributeName=\"r\"\n            :values=\"`1;${mergedConfig.halo.radius}`\"\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"opacity\"\n            values=\"1;0\"\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n      </defs>\n\n      <image\n        v-if=\"paths[0]\"\n        :xlink:href=\"mergedConfig.centerPointImg.url\"\n        :width=\"mergedConfig.centerPointImg.width\"\n        :height=\"mergedConfig.centerPointImg.height\"\n        :x=\"paths[0][2][0] - mergedConfig.centerPointImg.width / 2\"\n        :y=\"paths[0][2][1] - mergedConfig.centerPointImg.height / 2\"\n      />\n\n      <mask :id=\"`maskhalo${paths[0].toString()}`\">\n        <use\n          v-if=\"paths[0]\"\n          :xlink:href=\"`#circle${paths[0].toString()}`\"\n          :fill=\"`url(#${gradient2Id})`\"\n        />\n      </mask>\n\n      <use\n        v-if=\"paths[0] && mergedConfig.halo.show\"\n        :xlink:href=\"`#circle${paths[0].toString()}`\"\n        :fill=\"mergedConfig.halo.color\"\n        :mask=\"`url(#maskhalo${paths[0].toString()})`\"\n      />\n\n      <g\n        v-for=\"(path, i) in paths\"\n        :key=\"i\"\n      >\n        <defs>\n          <path\n            :id=\"`path${path.toString()}`\"\n            :ref=\"`path${i}`\"\n            :d=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\n            fill=\"transparent\"\n          />\n        </defs>\n\n        <use\n          :xlink:href=\"`#path${path.toString()}`\"\n          :stroke-width=\"mergedConfig.lineWidth\"\n          :stroke=\"mergedConfig.orbitColor\"\n        />\n\n        <use\n          v-if=\"lengths[i]\"\n          :xlink:href=\"`#path${path.toString()}`\"\n          :stroke-width=\"mergedConfig.lineWidth\"\n          :stroke=\"mergedConfig.flylineColor\"\n          :mask=\"`url(#mask${unique}${path.toString()})`\"\n        >\n          <animate\n            attributeName=\"stroke-dasharray\"\n            :from=\"`0, ${lengths[i]}`\"\n            :to=\"`${lengths[i]}, 0`\"\n            :dur=\"times[i] || 0\"\n            repeatCount=\"indefinite\"\n          />\n        </use>\n\n        <mask :id=\"`mask${unique}${path.toString()}`\">\n          <circle cx=\"0\" cy=\"0\" :r=\"mergedConfig.flylineRadius\" :fill=\"`url(#${gradientId})`\">\n            <animateMotion\n              :dur=\"times[i] || 0\"\n              :path=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\n              rotate=\"auto\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </mask>\n\n        <image\n          :xlink:href=\"mergedConfig.pointsImg.url\"\n          :width=\"mergedConfig.pointsImg.width\"\n          :height=\"mergedConfig.pointsImg.height\"\n          :x=\"path[0][0] - mergedConfig.pointsImg.width / 2\"\n          :y=\"path[0][1] - mergedConfig.pointsImg.height / 2\"\n        />\n\n        <text\n          :style=\"`fontSize:${mergedConfig.text.fontSize}px;`\"\n          :fill=\"mergedConfig.text.color\"\n          :x=\"path[0][0] + mergedConfig.text.offset[0]\"\n          :y=\"path[0][1] + mergedConfig.text.offset[1]\"\n        >\n          {{ texts[i] }}\n        </text>\n\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport { randomExtend, getPointDistance, uuid } from '../../../util/index'\n\nimport autoResize from '../../../mixin/autoResize'\n\nexport default {\n  name: 'DvFlylineChart',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    },\n    dev: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: 'dv-flyline-chart',\n      unique: Math.random(),\n      maskId: `flyline-mask-id-${id}`,\n      maskCircleId: `mask-circle-id-${id}`,\n      gradientId: `gradient-id-${id}`,\n      gradient2Id: `gradient2-id-${id}`,\n\n      defaultConfig: {\n        /**\n         * @description Flyline chart center point\n         * @type {Array<Number>}\n         * @default centerPoint = [0, 0]\n         */\n        centerPoint: [0, 0],\n        /**\n         * @description Flyline start points\n         * @type {Array<Array<Number>>}\n         * @default points = []\n         * @example points = [[10, 10], [100, 100]]\n         */\n        points: [],\n        /**\n         * @description Flyline width\n         * @type {Number}\n         * @default lineWidth = 1\n         */\n        lineWidth: 1,\n        /**\n         * @description Orbit color\n         * @type {String}\n         * @default orbitColor = 'rgba(103, 224, 227, .2)'\n         */\n        orbitColor: 'rgba(103, 224, 227, .2)',\n        /**\n         * @description Flyline color\n         * @type {String}\n         * @default orbitColor = '#ffde93'\n         */\n        flylineColor: '#ffde93',\n        /**\n         * @description K value\n         * @type {Number}\n         * @default k = -0.5\n         * @example k = -1 ~ 1\n         */\n        k: -0.5,\n        /**\n         * @description Flyline curvature\n         * @type {Number}\n         * @default curvature = 5\n         */\n        curvature: 5,\n        /**\n         * @description Flyline radius\n         * @type {Number}\n         * @default flylineRadius = 100\n         */\n        flylineRadius: 100,\n        /**\n         * @description Flyline animation duration\n         * @type {Array<Number>}\n         * @default duration = [20, 30]\n         */\n        duration: [20, 30],\n        /**\n         * @description Relative points position\n         * @type {Boolean}\n         * @default relative = true\n         */\n        relative: true,\n        /**\n         * @description Back ground image url\n         * @type {String}\n         * @default bgImgUrl = ''\n         * @example bgImgUrl = './img/bg.jpg'\n         */\n        bgImgUrl: '',\n        /**\n         * @description Text configuration\n         * @type {Object}\n         */\n        text: {\n          /**\n           * @description Text offset\n           * @type {Array<Number>}\n           * @default offset = [0, 15]\n           */\n          offset: [0, 15],\n          /**\n           * @description Text color\n           * @type {String}\n           * @default color = '#ffdb5c'\n           */\n          color: '#ffdb5c',\n          /**\n           * @description Text font size\n           * @type {Number}\n           * @default fontSize = 12\n           */\n          fontSize: 12\n        },\n        /**\n         * @description Halo configuration\n         * @type {Object}\n         */\n        halo: {\n          /**\n           * @description Weather to show halo\n           * @type {Boolean}\n           * @default show = true\n           * @example show = true | false\n           */\n          show: true,\n          /**\n           * @description Halo animation duration (10 = 1s)\n           * @type {Number}\n           * @default duration = 30\n           */\n          duration: 30,\n          /**\n           * @description Halo color\n           * @type {String}\n           * @default color = '#fb7293'\n           */\n          color: '#fb7293',\n          /**\n           * @description Halo max radius\n           * @type {Number}\n           * @default radius = 120\n           */\n          radius: 120\n        },\n        /**\n         * @description Center point img configuration\n         * @type {Object}\n         */\n        centerPointImg: {\n          /**\n           * @description Center point img width\n           * @type {Number}\n           * @default width = 40\n           */\n          width: 40,\n          /**\n           * @description Center point img height\n           * @type {Number}\n           * @default height = 40\n           */\n          height: 40,\n          /**\n           * @description Center point img url\n           * @type {String}\n           * @default url = ''\n           */\n          url: ''\n        },\n        /**\n         * @description Points img configuration\n         * @type {Object}\n         * @default radius = 120\n         */\n        pointsImg: {\n          /**\n           * @description Points img width\n           * @type {Number}\n           * @default width = 15\n           */\n          width: 15,\n          /**\n           * @description Points img height\n           * @type {Number}\n           * @default height = 15\n           */\n          height: 15,\n          /**\n           * @description Points img url\n           * @type {String}\n           * @default url = ''\n           */\n          url: ''\n        }\n      },\n\n      mergedConfig: null,\n\n      paths: [],\n      lengths: [],\n      times: [],\n      texts: []\n    }\n  },\n  watch: {\n    config () {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { calcData } = this\n\n      calcData()\n    },\n    async calcData () {\n      const { mergeConfig, createFlylinePaths, calcLineLengths } = this\n\n      mergeConfig()\n\n      createFlylinePaths()\n\n      await calcLineLengths()\n\n      const { calcTimes, calcTexts } = this\n\n      calcTimes()\n\n      calcTexts()\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n\n      const { points } = mergedConfig\n\n      mergedConfig.points = points.map(item => {\n        if (item instanceof Array) {\n          return { position: item, text: '' }\n        }\n\n        return item\n      })\n\n      this.mergedConfig = mergedConfig\n    },\n    createFlylinePaths () {\n      const { getPath, mergedConfig, width, height } = this\n\n      let { centerPoint, points, relative } = mergedConfig\n\n      points = points.map(({ position }) => position)\n\n      if (relative) {\n        centerPoint = [width * centerPoint[0], height * centerPoint[1]]\n        points = points.map(([x, y]) => [width * x, height * y])\n      }\n\n      this.paths = points.map(point => getPath(centerPoint, point))\n    },\n    getPath (center, point) {\n      const { getControlPoint } = this\n\n      const controlPoint = getControlPoint(center, point)\n\n      return [point, controlPoint, center]\n    },\n    getControlPoint ([sx, sy], [ex, ey]) {\n      const { getKLinePointByx, mergedConfig } = this\n\n      const { curvature, k } = mergedConfig\n\n      const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\n\n      const distance = getPointDistance([sx, sy], [ex, ey])\n\n      const targetLength = distance / curvature\n      const disDived = targetLength / 2\n\n      let [dx, dy] = [mx, my]\n\n      do {\n        dx += disDived\n        dy = getKLinePointByx(k, [mx, my], dx)[1]\n      } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\n\n      return [dx, dy]\n    },\n    getKLinePointByx (k, [lx, ly], x) {\n      const y = ly - k * lx + k * x\n\n      return [x, y]\n    },\n    async calcLineLengths () {\n      const { $nextTick, paths, $refs } = this\n\n      await $nextTick()\n\n      this.lengths = paths.map((foo, i) => $refs[`path${i}`][0].getTotalLength())\n    },\n    calcTimes () {\n      const { duration, points } = this.mergedConfig\n\n      this.times = points.map(foo => randomExtend(...duration) / 10)\n    },\n    calcTexts () {\n      const { points } = this.mergedConfig\n\n      this.texts = points.map(({ text }) => text)\n    },\n    consoleClickPos ({ offsetX, offsetY }) {\n      const { width, height, dev } = this\n\n      if (!dev) return\n\n      const relativeX = (offsetX / width).toFixed(2)\n      const relativeY = (offsetY / height).toFixed(2)\n\n      console.warn(`dv-flyline-chart DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`)\n    }\n  }\n}\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/flylineChart/src"}]}