{"remainingRequest":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\src\\layout\\components\\Sidebar\\index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\src\\layout\\components\\Sidebar\\index.vue","mtime":1640096691576},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1711181251489},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1711181253421},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1711181252308},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711181250741},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1711181252689}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50YWdzLXZpZXctY29udGFpbmVyIC50YWdzLXZpZXctd3JhcHBlciAudGFncy12aWV3LWl0ZW1bZGF0YS12LWZhYzhjYTY0XSB7CiAgICBmb250LXNpemU6IDE4cHggIWltcG9ydGFudDsKfQouc2Nyb2xsLWNvbnRhaW5lcltkYXRhLXYtYmU2YjdiYWVdIC5lbC1zY3JvbGxiYXJfX3dyYXAgewogICAgaGVpZ2h0OiA2NHB4ICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/layout/components/Sidebar","sourcesContent":["<template>\n    <div class=\"has-logo\" style=\"background-color: rgb(48, 65, 86);margin-top: 100px;\">\n        <!-- <logo v-if=\"showLogo\" :collapse=\"isCollapse\" /> -->\n        <el-scrollbar :class=\"settings.sideTheme\" wrap-class=\"scrollbar-wrapper\">\n            <el-menu\n                :default-active=\"activeMenu\"\n\n                :background-color=\"settings.sideTheme === 'theme-dark' ? variables.menuBg : variables.menuLightBg\"\n                :text-color=\"settings.sideTheme === 'theme-dark' ? variables.menuText : 'rgba(0,0,0,.65)'\"\n                :unique-opened=\"false\"\n                :active-text-color=\"settings.theme\"\n                :collapse-transition=\"false\"\n                mode=\"vertical\"\n            >\n                <sidebar-item\n                    v-for=\"(route, index) in sidebarRouters\"\n                    :key=\"route.path  + index\"\n                    :item=\"route\"\n                    :base-path=\"route.path\"\n                />\n            </el-menu>\n        </el-scrollbar>\n    </div>\n</template>\n\n<script>\nimport { mapGetters, mapState } from \"vuex\";\nimport Logo from \"./Logo\";\nimport SidebarItem from \"./SidebarItem\";\nimport variables from \"@/assets/styles/variables.scss\";\n\nexport default {\n    components: { SidebarItem, Logo },\n    computed: {\n        ...mapState([\"settings\"]),\n        ...mapGetters([\"sidebarRouters\", \"sidebar\"]),\n        activeMenu() {\n            const route = this.$route;\n            const { meta, path } = route;\n            // if set path, the sidebar will highlight the path you set\n            if (meta.activeMenu) {\n                return meta.activeMenu;\n            }\n            return path;\n        },\n        showLogo() {\n            return this.$store.state.settings.sidebarLogo;\n        },\n        variables() {\n            return variables;\n        },\n        isCollapse() {\n            return !this.sidebar.opened;\n        }\n    }\n};\n</script>\n<style>\n\t.tags-view-container .tags-view-wrapper .tags-view-item[data-v-fac8ca64] {\n\t    font-size: 18px !important;\n\t}\n\t.scroll-container[data-v-be6b7bae] .el-scrollbar__wrap {\n\t    height: 64px !important;\n\t}\n</style>\n"]}]}