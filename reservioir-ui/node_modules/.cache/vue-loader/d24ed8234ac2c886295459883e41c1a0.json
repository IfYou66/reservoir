{"remainingRequest":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\src\\views\\safetyManagement\\engineering\\engineering.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\src\\views\\safetyManagement\\engineering\\engineering.vue","mtime":1640511915282},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1711181251489},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1711181253421},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1711181252308},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711181250741},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1711181252689}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNhbGxtYXAgewogIHdpZHRoOiA2MCU7CiAgaGVpZ2h0OiA4NXZoOwogIH0K"},{"version":3,"sources":["engineering.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsTA;AACA;AACA;AACA","file":"engineering.vue","sourceRoot":"src/views/safetyManagement/engineering","sourcesContent":["<template>\n  <div style=\"width: 100%;\">\n    <div id=\"allmap\" style=\"width:96%;margin: 0 auto;\"></div>\n    <el-dropdown class=\"avatar-container right-menu-item hover-effect\" trigger=\"click\" style=\"position: absolute;right: 200px;top: 50px;z-index: 9999;\">\n      <div class=\"avatar-wrapper\">\n          <el-button>\n            附件下载<i class=\"el-icon-arrow-down el-icon--right\"></i>\n          </el-button>\n      </div>\n      <el-dropdown-menu slot=\"dropdown\">\n        <el-dropdown-item   v-for=\"(arr,index) in fileList\" :key=\"index\" style=\"padding: 5px 20px 5px 20px\">\n          <span style=\"margin-right: 10px;\">{{arr.name}}</span>\n          <el-button @click=\"download(arr.url)\"   size=\"small\"  icon=\"el-icon-download\" >下载</el-button>\n        </el-dropdown-item>\n      </el-dropdown-menu>\n    </el-dropdown>\n\n    <el-dropdown class=\"avatar-container right-menu-item hover-effect\" trigger=\"click\" style=\"position: absolute;right: 82px;top: 50px;z-index: 9999;\">\n      <div class=\"avatar-wrapper\" @click=\"clickWrapper\">\n          <el-button icon=\"el-icon-s-flag\">\n            界桩操作\n          </el-button>\n      </div>\n      <el-dropdown-menu  v-show=\"false\"></el-dropdown-menu>\n\n    </el-dropdown>\n    <!-- <div style=\"width: 40%;font-size: 22px;line-height: 35px;padding: 30px;font-weight:bold;\"> -->\n      <!-- <el-table\n          :data=\"tableData\"\n          border\n          style=\"width: 100%;margin-top:30px;\">\n          <el-table-column\n            prop=\"annex\"\n            label=\"附件名称\"\n            >\n          </el-table-column>\n          <el-table-column\n            prop=\"address\"\n            label=\"操作\">\n            下载\n          </el-table-column>\n        </el-table> -->\n    <!-- </div> -->\n\n    <el-dialog title=\"界桩操作\" :visible.sync=\"open\" width=\"700px\" >\n\n      <el-form   :model=\"form\" ref=\"form\" class=\"demo-form-inline\" >\n\n        <el-form-item label=\"中心坐标\" >\n          <el-input style=\"width:200px\" v-model=\"form.fCenterPoint\" placeholder=\"中心坐标\" />\n           <div style=\"color: red;margin-left: 100px;\">\n             注：经度纬度之间需要逗号分隔\n           </div>\n        </el-form-item>\n        <el-form-item label=\"坐标\">\n          <el-input style=\"width:400px\" v-model=\"form.fLabel\" placeholder=\"坐标\"   type=\"textarea\"\n            :rows=\"4\"/>\n            <div style=\"color: red;margin-left: 100px;\">\n              注：经度纬度之间需要逗号分隔，多个坐标之间需要分号分隔。\n            </div>\n        </el-form-item>\n        <el-upload style=\"margin-left: 105px;margin-top: 15px\" class=\"upload-demo\" :headers=\"GLOBAL.headers()\"\n         :before-upload = \"beforeAvatarUpload\"\n          :action=\"GLOBAL.httpUrl\" :on-preview=\"handlePreview\" :on-remove=\"handleRemove\"\n          multiple :on-success=\"uploadedSuccess\" :show-file-list=\"true\" :auto-upload=\"true\" :limit=\"1\" :on-exceed=\"handleExceed\"\n          :file-list=\"fileList\">\n          <el-button size=\"small\" type=\"primary\">上传附件</el-button>\n          <div slot=\"tip\" class=\"el-upload__tip\" style=\"margin-top: 15px\">上传文件不得超过100M</div>\n        </el-upload>\n\n\n      </el-form>\n      <el-row>\n        <el-col :span=\"24\">\n\n        </el-col>\n      </el-row>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cancel\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\" >确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n\n</template>\n\n<script>\n  import icon from '../../../assets/jiezhuang.png';\nimport { listBorder ,update} from \"@/api/classifyManage/border\";\n  import {\r\n    getFileById\r\n  } from \"@/api/file\";\n\n\nexport default {\n    data() {\n      return {\n        open:false,\n        form:{},\n        fileList:[],\n        tableData: [{\n          annex: '划界依据.xls'\n        }, {\n          annex: '划界批文.xls'\n        }],\n        queryParams: {},\n        // 坐标数据\n        LabelList: [],\n      };\n    },\n    created() {\n\n    },\n    mounted:function(){\n\n      this.getList();\n    },\n    methods: {\n      download(val){\n        window.open(val)\n      },\n      beforeAvatarUpload(file){\n            const isLt100M = file.size / 1024 / 1024 < 100;\n               if (!isLt100M) {\n                      this.$message.error('上传文件大小不能超过 100MB!');\n                      return false\n                  }\n            },\n      handlePreview(file) {\n        window.location.href = file.url;\n      },\n      uploadedSuccess(response, file, fileList) {\n        this.form.fFileId = response.data.fId;\n        // this.getFile();\n      },\n      handleExceed(files, fileList) {\n        this.$message.warning(`当前限制选择 1 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`);\n      },\n      beforeRemove(file, fileList) {\n        return this.$confirm(`确定移除 ${file.name}？`);\n      },\n      handleRemove(file, fileList) {\n        this.GLOBAL.commonFun(this.form.fFileId);\n        // this.rControl.fPlanId = '';\n        // this.getFile();\n      },\n      cancel(){\n      this.open = false\n      },\n      submitForm(){\n        if (this.form.fCenterPoint == null) {\n          this.$message.error(\"请填写中心坐标\")\n          return false\n        }\n         if (this.form.fLabel == null) {\n          this.$message.error(\"请填写坐标\")\n          return false\n        }\n         if (this.form.fFileId == null) {\n          this.$message.error(\"请上传文件\")\n          return false\n        }\n        this.form.params = null\n          update(this.form).then(result => {\n            if (result) {\n              this.msgSuccess(\"保存成功\");\n              this.open = false\n              this.getList();\n            }\n          })\n      },\n      clickWrapper(){\n        this.getList();\n        if(this.LabelList[0]){\n          this.form = this.LabelList[0]\n          this.getFile()\n        }\n\n        this.open = true\n      },\n      getFile() {\n        console.log('fileList = []');\n        this.fileList = [];\n        if (this.LabelList[0].fFileId) {\n          getFileById({\n            id: this.LabelList[0].fFileId\n          }).then(result => {\n            if (result) {\n              this.fileList = [{\n                name: result.data.fOldFileName,\n                url: result.data.fFilePath\n              }];\n              console.log(\"fileList.url:\", this.fileList);\n            }\n          })\n        }\n      },\n    /** 查询坐标列表 */\n    getList() {\n      listBorder(this.queryParams).then(response => {\n        this.LabelList = response.data;\n        this.getFile()\n        this.loadJScript();\n      });\n    },\n      loadJScript(){\n          var script = document.createElement('script');\n          script.type = \"text/javascript\";\n          script.src = \"https://api.map.baidu.com/getscript??v=1.0&ak=epzuneKMNwBO9DunUSojeQlPGfz6NfM3&services=&t=20200927172029\";\n          script.onload = () =>{\n            this.init();\n          }\n          document.body.appendChild(script);\n      },\n    init(){\n    let BMap = window.BMap;\n    // console.log(BMap);\n    // 百度地图API功能\n    let  fCenterPoint = this.LabelList[0].fCenterPoint.split(',');\n    var map = new BMap.Map(\"allmap\");    // 创建Map实例\n    map.centerAndZoom(new BMap.Point(fCenterPoint[0],fCenterPoint[1]), 14);  // 初始化地图,设置中心点坐标和地图级别\n    map.setCurrentCity(\"山东\");          // 设置地图显示的城市 此项是必须设置的\n    map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放\n// 绘制面\nvar arrr =[];\nlet labels = this.LabelList[0].fChangeLabel.split(\";\");\n\nfor(var a=0 ;a < labels.length ; a++ ){\n      var qwe =  labels[a].split(',')\n      arrr.push(new BMap.Point(parseFloat(qwe[0]),parseFloat(qwe[1])))\n}\n\nconst deviceSize = new BMap.Size(30,50);\nconst deviceIcon = new BMap.Icon(icon, deviceSize, { //会以base64的方式传参iconCar\n    imageSize: new BMap.Size(30,30),\n    imageOffset:new BMap.Size(1,-1)\n});\nfor(var b=0 ; b<arrr.length ; b++){\n   const markers = new BMap.Marker(arrr[b], {\n       icon: deviceIcon\n   });\n  map.addOverlay(markers);\n}\n  var point = new BMap.Point(fCenterPoint[0],fCenterPoint[1]);\n  var marker = new BMap.Marker(point);        // 创建标注\n  map.addOverlay(marker);\n\n\n\n  var ponint = new BMap.Polygon(\n    arrr\n  , {\n    strokeColor: 'blue',\n    strokeWeight: 2,\n    strokeOpacity: 0,\n    fillOpacity:0.1,\n})\nponint.setFillColor(\"none\");\n map.addOverlay(ponint);\n // ponint.enableEditing();\n\n// var Polyline = new BMap.Polygon([\n//   // this.LabelList.forEach(function (item, index, LabelList) {\n//   //   new BMap.Point(item.fLabel)\n//   // })\n\n//     new BMap.Point(117.207417,35.263976),\n//     new BMap.Point(117.202961,35.25702),\n//     new BMap.Point(117.196781,35.263504),\n//     new BMap.Point(117.185714,35.264094),\n//     new BMap.Point(117.195344,35.233909),\n//     new BMap.Point(117.20253,35.217279),\n//     new BMap.Point(117.220209,35.21256),\n//     new BMap.Point(117.235875,35.220345),\n//     new BMap.Point(117.238606,35.244286),\n//     new BMap.Point(117.238606,35.244286),\n//     new BMap.Point(117.21719,35.2503),\n//     new BMap.Point(117.217047,35.261618),\n\n\n// ], {\n//     strokeColor: 'blue',\n//     strokeWeight: 2,\n//     strokeOpacity: 0,\n//     fillOpacity:0.1\n// });\n// console.log('88888888888888',Polyline)\n// map.addOverlay(Polyline);\n//  Polyline.enableEditing();\n\n  var myIcon = new BMap.Icon(\"../../../assets/images/baidu.jpeg\", new BMap.Size(23, 25), {\n      // 指定定位位置。\n      // 当标注显示在地图上时，其所指向的地理位置距离图标左上\n      // 角各偏移10像素和25像素。您可以看到在本例中该位置即是\n      // 图标中央下端的尖角位置。\n      anchor: new BMap.Size(10, 25),\n      // 设置图片偏移。\n      // 当您需要从一幅较大的图片中截取某部分作为标注图标时，您\n      // 需要指定大图的偏移位置，此做法与css sprites技术类似。\n      imageOffset: new BMap.Size(0, 0 - 25)   // 设置图片偏移\n  });\n      // 创建标注对象并添加到地图\n  var marker = new BMap.Marker(point, {icon: myIcon});\n  map.addOverlay(marker);\n},\n\n    }\n  };\n</script>\n<style type=\"text/css\">\n#allmap {\n  width: 60%;\n  height: 85vh;\n  }\n</style>\n"]}]}