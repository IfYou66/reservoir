{"remainingRequest":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\src\\views\\safetyManagement\\engineering\\safety.vue?vue&type=template&id=481a66be&","dependencies":[{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\src\\views\\safetyManagement\\engineering\\safety.vue","mtime":1641226348267},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711181250741},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1711181253550},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711181250741},{"path":"D:\\GraduationProject\\final\\reservioir\\reservioir-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1711181252689}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}